import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * @stability stable
 */
export interface DockerProviderConfig {
    /**
     * PEM-encoded content of Docker host CA certificate.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#ca_material DockerProvider#ca_material}
     *
     * @stability stable
     */
    readonly caMaterial?: string;
    /**
     * PEM-encoded content of Docker client certificate.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#cert_material DockerProvider#cert_material}
     *
     * @stability stable
     */
    readonly certMaterial?: string;
    /**
     * Path to directory with Docker TLS config.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#cert_path DockerProvider#cert_path}
     *
     * @stability stable
     */
    readonly certPath?: string;
    /**
     * The Docker daemon address.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#host DockerProvider#host}
     *
     * @stability stable
     */
    readonly host?: string;
    /**
     * PEM-encoded content of Docker client private key.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#key_material DockerProvider#key_material}
     *
     * @stability stable
     */
    readonly keyMaterial?: string;
    /**
     * Alias name.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#alias DockerProvider#alias}
     *
     * @stability stable
     */
    readonly alias?: string;
    /**
     * registry_auth block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#registry_auth DockerProvider#registry_auth}
     *
     * @stability stable
     */
    readonly registryAuth?: DockerProviderRegistryAuth[];
}
/**
 * @stability stable
 */
export interface DockerProviderRegistryAuth {
    /**
     * Address of the registry.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#address DockerProvider#address}
     *
     * @stability stable
     */
    readonly address: string;
    /**
     * Path to docker json file for registry auth.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#config_file DockerProvider#config_file}
     *
     * @stability stable
     */
    readonly configFile?: string;
    /**
     * Plain content of the docker json file for registry auth.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#config_file_content DockerProvider#config_file_content}
     *
     * @stability stable
     */
    readonly configFileContent?: string;
    /**
     * Password for the registry.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#password DockerProvider#password}
     *
     * @stability stable
     */
    readonly password?: string;
    /**
     * Username for the registry.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#username DockerProvider#username}
     *
     * @stability stable
     */
    readonly username?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/docker docker}.
 *
 * @stability stable
 */
export declare class DockerProvider extends cdktf.TerraformProvider {
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/docker docker} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: DockerProviderConfig);
    private _caMaterial?;
    /**
     * @stability stable
     */
    get caMaterial(): string | undefined;
    /**
     * @stability stable
     */
    set caMaterial(value: string | undefined);
    /**
     * @stability stable
     */
    resetCaMaterial(): void;
    /**
     * @stability stable
     */
    get caMaterialInput(): string | undefined;
    private _certMaterial?;
    /**
     * @stability stable
     */
    get certMaterial(): string | undefined;
    /**
     * @stability stable
     */
    set certMaterial(value: string | undefined);
    /**
     * @stability stable
     */
    resetCertMaterial(): void;
    /**
     * @stability stable
     */
    get certMaterialInput(): string | undefined;
    private _certPath?;
    /**
     * @stability stable
     */
    get certPath(): string | undefined;
    /**
     * @stability stable
     */
    set certPath(value: string | undefined);
    /**
     * @stability stable
     */
    resetCertPath(): void;
    /**
     * @stability stable
     */
    get certPathInput(): string | undefined;
    private _host?;
    /**
     * @stability stable
     */
    get host(): string | undefined;
    /**
     * @stability stable
     */
    set host(value: string | undefined);
    /**
     * @stability stable
     */
    resetHost(): void;
    /**
     * @stability stable
     */
    get hostInput(): string | undefined;
    private _keyMaterial?;
    /**
     * @stability stable
     */
    get keyMaterial(): string | undefined;
    /**
     * @stability stable
     */
    set keyMaterial(value: string | undefined);
    /**
     * @stability stable
     */
    resetKeyMaterial(): void;
    /**
     * @stability stable
     */
    get keyMaterialInput(): string | undefined;
    private _alias?;
    /**
     * @stability stable
     */
    get alias(): string | undefined;
    /**
     * @stability stable
     */
    set alias(value: string | undefined);
    /**
     * @stability stable
     */
    resetAlias(): void;
    /**
     * @stability stable
     */
    get aliasInput(): string | undefined;
    private _registryAuth?;
    /**
     * @stability stable
     */
    get registryAuth(): DockerProviderRegistryAuth[] | undefined;
    /**
     * @stability stable
     */
    set registryAuth(value: DockerProviderRegistryAuth[] | undefined);
    /**
     * @stability stable
     */
    resetRegistryAuth(): void;
    /**
     * @stability stable
     */
    get registryAuthInput(): DockerProviderRegistryAuth[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

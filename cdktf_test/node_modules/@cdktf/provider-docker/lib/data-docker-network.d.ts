import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * @stability stable
 */
export interface DataDockerNetworkConfig extends cdktf.TerraformMetaArguments {
    /**
     * The name of the Docker network.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/d/network.html#name DataDockerNetwork#name}
     *
     * @stability stable
     */
    readonly name: string;
}
/**
 * @stability stable
 */
export declare class DataDockerNetworkIpamConfig extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get auxAddress(): any;
    /**
     * @stability stable
     */
    get gateway(): string;
    /**
     * @stability stable
     */
    get ipRange(): string;
    /**
     * @stability stable
     */
    get subnet(): string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/docker/d/network.html docker_network}.
 *
 * @stability stable
 */
export declare class DataDockerNetwork extends cdktf.TerraformDataSource {
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/docker/d/network.html docker_network} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DataDockerNetworkConfig);
    /**
     * @stability stable
     */
    get driver(): string;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get internal(): boolean;
    /**
     * @stability stable
     */
    ipamConfig(index: string): DataDockerNetworkIpamConfig;
    private _name;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string;
    /**
     * @stability stable
     */
    options(key: string): string;
    /**
     * @stability stable
     */
    get scope(): string;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

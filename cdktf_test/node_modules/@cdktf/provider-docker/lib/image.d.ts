import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * @stability stable
 */
export interface ImageConfig extends cdktf.TerraformMetaArguments {
    /**
     * If true, then the image is removed forcibly when the resource is destroyed.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#force_remove Image#force_remove}
     *
     * @stability stable
     */
    readonly forceRemove?: boolean;
    /**
     * If true, then the Docker image won't be deleted on destroy operation.
     *
     * If this is false, it will delete the image from the docker local storage on destroy operation.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#keep_locally Image#keep_locally}
     *
     * @stability stable
     */
    readonly keepLocally?: boolean;
    /**
     * The name of the Docker image, including any tags or SHA256 repo digests.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#name Image#name}
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * A value which cause an image pull when changed.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#pull_trigger Image#pull_trigger}
     *
     * @stability stable
     */
    readonly pullTrigger?: string;
    /**
     * List of values which cause an image pull when changed.
     *
     * This is used to store the image digest from the registry when using the [docker_registry_image](../data-sources/registry_image.md).
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#pull_triggers Image#pull_triggers}
     *
     * @stability stable
     */
    readonly pullTriggers?: string[];
    /**
     * build block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#build Image#build}
     *
     * @stability stable
     */
    readonly buildAttribute?: ImageBuild[];
}
/**
 * @stability stable
 */
export interface ImageBuild {
    /**
     * Set build-time variables.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#build_arg Image#build_arg}
     *
     * @stability stable
     */
    readonly buildArg?: {
        [key: string]: string;
    };
    /**
     * Name of the Dockerfile. Defaults to `Dockerfile`.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#dockerfile Image#dockerfile}
     *
     * @stability stable
     */
    readonly dockerfile?: string;
    /**
     * Always remove intermediate containers.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#force_remove Image#force_remove}
     *
     * @stability stable
     */
    readonly forceRemove?: boolean;
    /**
     * Set metadata for an image.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#label Image#label}
     *
     * @stability stable
     */
    readonly label?: {
        [key: string]: string;
    };
    /**
     * Do not use cache when building the image.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#no_cache Image#no_cache}
     *
     * @stability stable
     */
    readonly noCache?: boolean;
    /**
     * Context path.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#path Image#path}
     *
     * @stability stable
     */
    readonly path: string;
    /**
     * Remove intermediate containers after a successful build. Defaults to  `true`.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#remove Image#remove}
     *
     * @stability stable
     */
    readonly remove?: boolean;
    /**
     * Name and optionally a tag in the 'name:tag' format.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#tag Image#tag}
     *
     * @stability stable
     */
    readonly tag?: string[];
    /**
     * Set the target build stage to build.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#target Image#target}
     *
     * @stability stable
     */
    readonly target?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/docker/r/image.html docker_image}.
 *
 * @stability stable
 */
export declare class Image extends cdktf.TerraformResource {
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/docker/r/image.html docker_image} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ImageConfig);
    private _forceRemove?;
    /**
     * @stability stable
     */
    get forceRemove(): boolean;
    /**
     * @stability stable
     */
    set forceRemove(value: boolean);
    /**
     * @stability stable
     */
    resetForceRemove(): void;
    /**
     * @stability stable
     */
    get forceRemoveInput(): boolean | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _keepLocally?;
    /**
     * @stability stable
     */
    get keepLocally(): boolean;
    /**
     * @stability stable
     */
    set keepLocally(value: boolean);
    /**
     * @stability stable
     */
    resetKeepLocally(): void;
    /**
     * @stability stable
     */
    get keepLocallyInput(): boolean | undefined;
    /**
     * @stability stable
     */
    get latest(): string;
    private _name;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string;
    /**
     * @stability stable
     */
    get output(): string;
    private _pullTrigger?;
    /**
     * @stability stable
     */
    get pullTrigger(): string;
    /**
     * @stability stable
     */
    set pullTrigger(value: string);
    /**
     * @stability stable
     */
    resetPullTrigger(): void;
    /**
     * @stability stable
     */
    get pullTriggerInput(): string | undefined;
    private _pullTriggers?;
    /**
     * @stability stable
     */
    get pullTriggers(): string[];
    /**
     * @stability stable
     */
    set pullTriggers(value: string[]);
    /**
     * @stability stable
     */
    resetPullTriggers(): void;
    /**
     * @stability stable
     */
    get pullTriggersInput(): string[] | undefined;
    private _build?;
    /**
     * @stability stable
     */
    get buildAttribute(): ImageBuild[];
    /**
     * @stability stable
     */
    set buildAttribute(value: ImageBuild[]);
    /**
     * @stability stable
     */
    resetBuildAttribute(): void;
    /**
     * @stability stable
     */
    get buildAttributeInput(): ImageBuild[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

{
  "author": {
    "name": "HashiCorp",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://hashicorp.com"
  },
  "dependencies": {
    "cdktf": "^0.4",
    "constructs": "^3.0.4"
  },
  "dependencyClosure": {
    "cdktf": {
      "targets": {
        "dotnet": {
          "namespace": "HashiCorp.Cdktf",
          "packageId": "HashiCorp.Cdktf"
        },
        "go": {
          "moduleName": "github.com/hashicorp/terraform-cdk-go",
          "packageName": "cdktf"
        },
        "java": {
          "maven": {
            "artifactId": "cdktf",
            "groupId": "com.hashicorp"
          },
          "package": "com.hashicorp.cdktf"
        },
        "js": {
          "npm": "cdktf"
        },
        "python": {
          "distName": "cdktf",
          "module": "cdktf"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Prebuilt docker Provider for Terraform CDK (cdktf)",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/terraform-cdk-providers/cdktf-provider-docker.git",
  "jsiiVersion": "1.30.0 (build adae23f)",
  "keywords": [
    "cdk",
    "cdktf",
    "docker",
    "provider",
    "terraform"
  ],
  "license": "MPL-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@cdktf/provider-docker",
  "readme": {
    "markdown": "\n# Terraform CDK docker Provider ~> 2.12\n\nThis repo builds and publishes the Terraform docker Provider bindings for [cdktf](https://cdk.tf).\n\nCurrent build targets are:\n\n- npm\n- Pypi\n- Nuget\n- Maven\n\n## Docs\n\nFind auto-generated docs for this provider here: [./API.md](./API.md)\n\n## Versioning\n\nThis project is explicitly not tracking the Terraform docker Provider version 1:1. In fact, it always tracks `latest` of `~> 2.12` with every release. If there scenarios where you explicitly have to pin your provider version, you can do so by generating the [provider constructs manually](https://cdk.tf/imports).\n\nThese are the upstream dependencies:\n\n- [Terraform CDK](https://cdk.tf)\n- [Terraform docker Provider](https://github.com/terraform-providers/terraform-provider-docker)\n- [Terraform Engine](https://terraform.io)\n\nIf there are breaking changes (backward incompatible) in any of the above, the major version of this project will be bumped. While the Terraform Engine and the Terraform docker Provider are relatively stable, the Terraform CDK is in an early stage. Therefore, it's likely that there will be breaking changes.\n\n## Features / Issues / Bugs\n\nPlease report bugs and issues to the [terraform cdk](https://cdk.tf) project:\n\n- [Create bug report](https://cdk.tf/bug)\n- [Create feature request](https://cdk.tf/feature)\n\n## Contributing\n\n## projen\n\nThis is mostly based on [projen](https://github.com/eladb/projen), which takes care of generating the entire repository.\n\n## cdktf-provider-project based on projen\n\nThere's a custom [project builder](https://github.com/terraform-cdk-providers/cdktf-provider-project) which encapsulate the common settings for all `cdktf` providers.\n\n## provider version\n\nThe provider version can be adjusted in [./.projenrc.js](./.projenrc.js).\n\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/terraform-cdk-providers/cdktf-provider-docker.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "namespace": "HashiCorp.Cdktf.Providers.Docker",
      "packageId": "HashiCorp.Cdktf.Providers.Docker"
    },
    "js": {
      "npm": "@cdktf/provider-docker"
    },
    "python": {
      "distName": "cdktf-cdktf-provider-docker",
      "module": "cdktf_cdktf_provider_docker"
    }
  },
  "types": {
    "@cdktf/provider-docker.Config": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/config.html docker_config}."
      },
      "fqn": "@cdktf/provider-docker.Config",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/config.html docker_config} Resource."
        },
        "locationInModule": {
          "filename": "src/config.ts",
          "line": 40
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.ConfigConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/config.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 94
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Config",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 68
          },
          "name": "dataInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 73
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 86
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 61
          },
          "name": "data",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 79
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ConfigConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ConfigConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/config.ts",
        "line": 9
      },
      "name": "ConfigConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/config.html#data Config#data}",
            "stability": "stable",
            "summary": "Base64-url-safe-encoded config data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 15
          },
          "name": "data",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/config.html#name Config#name}",
            "stability": "stable",
            "summary": "User-defined name of the config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config.ts",
            "line": 21
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Container": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/container.html docker_container}."
      },
      "fqn": "@cdktf/provider-docker.Container",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/container.html docker_container} Resource."
        },
        "locationInModule": {
          "filename": "src/container.ts",
          "line": 900
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.ContainerConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 887
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1419
          },
          "name": "networkData",
          "parameters": [
            {
              "name": "index",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-docker.ContainerNetworkData"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 981
          },
          "name": "resetAttach"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1735
          },
          "name": "resetCapabilities"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1002
          },
          "name": "resetCommand"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1023
          },
          "name": "resetCpuSet"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1039
          },
          "name": "resetCpuShares"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1055
          },
          "name": "resetDestroyGraceSeconds"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1751
          },
          "name": "resetDevices"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1071
          },
          "name": "resetDns"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1087
          },
          "name": "resetDnsOpts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1103
          },
          "name": "resetDnsSearch"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1119
          },
          "name": "resetDomainname"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1135
          },
          "name": "resetEntrypoint"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1151
          },
          "name": "resetEnv"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1177
          },
          "name": "resetGroupAdd"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1767
          },
          "name": "resetHealthcheck"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1783
          },
          "name": "resetHost"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1193
          },
          "name": "resetHostname"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1227
          },
          "name": "resetInit"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1253
          },
          "name": "resetIpcMode"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1799
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1269
          },
          "name": "resetLinks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1285
          },
          "name": "resetLogDriver"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1301
          },
          "name": "resetLogOpts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1317
          },
          "name": "resetLogs"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1333
          },
          "name": "resetMaxRetryCount"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1349
          },
          "name": "resetMemory"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1365
          },
          "name": "resetMemorySwap"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1815
          },
          "name": "resetMounts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1381
          },
          "name": "resetMustRun"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1410
          },
          "name": "resetNetworkAlias"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1431
          },
          "name": "resetNetworkMode"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1447
          },
          "name": "resetNetworks"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1831
          },
          "name": "resetNetworksAdvanced"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1463
          },
          "name": "resetPidMode"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1847
          },
          "name": "resetPorts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1479
          },
          "name": "resetPrivileged"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1495
          },
          "name": "resetPublishAllPorts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1511
          },
          "name": "resetReadOnly"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1527
          },
          "name": "resetRemoveVolumes"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1543
          },
          "name": "resetRestart"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1559
          },
          "name": "resetRm"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1575
          },
          "name": "resetSecurityOpts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1591
          },
          "name": "resetShmSize"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1607
          },
          "name": "resetStart"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1623
          },
          "name": "resetStdinOpen"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1639
          },
          "name": "resetSysctls"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1655
          },
          "name": "resetTmpfs"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1671
          },
          "name": "resetTty"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1863
          },
          "name": "resetUlimit"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1879
          },
          "name": "resetUpload"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1687
          },
          "name": "resetUser"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1703
          },
          "name": "resetUsernsMode"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1895
          },
          "name": "resetVolumes"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1719
          },
          "name": "resetWorkingDir"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1907
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Container",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 990
          },
          "name": "bridge",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1011
          },
          "name": "containerLogs",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1160
          },
          "name": "exitCode",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1165
          },
          "name": "gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1202
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1215
          },
          "name": "imageInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1236
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1241
          },
          "name": "ipPrefixLength",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1398
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 985
          },
          "name": "attachInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1739
          },
          "name": "capabilitiesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1006
          },
          "name": "commandInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1027
          },
          "name": "cpuSetInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1043
          },
          "name": "cpuSharesInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1059
          },
          "name": "destroyGraceSecondsInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1755
          },
          "name": "devicesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerDevices"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1075
          },
          "name": "dnsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1091
          },
          "name": "dnsOptsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1107
          },
          "name": "dnsSearchInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1123
          },
          "name": "domainnameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1139
          },
          "name": "entrypointInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1155
          },
          "name": "envInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1181
          },
          "name": "groupAddInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1771
          },
          "name": "healthcheckInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHealthcheck"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1787
          },
          "name": "hostInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHost"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1197
          },
          "name": "hostnameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1231
          },
          "name": "initInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1257
          },
          "name": "ipcModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1803
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1273
          },
          "name": "linksInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1289
          },
          "name": "logDriverInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1305
          },
          "name": "logOptsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1321
          },
          "name": "logsInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1337
          },
          "name": "maxRetryCountInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1353
          },
          "name": "memoryInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1369
          },
          "name": "memorySwapInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1819
          },
          "name": "mountsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMounts"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1385
          },
          "name": "mustRunInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1414
          },
          "name": "networkAliasInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1435
          },
          "name": "networkModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1835
          },
          "name": "networksAdvancedInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerNetworksAdvanced"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1451
          },
          "name": "networksInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1467
          },
          "name": "pidModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1851
          },
          "name": "portsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerPorts"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1483
          },
          "name": "privilegedInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1499
          },
          "name": "publishAllPortsInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1515
          },
          "name": "readOnlyInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1531
          },
          "name": "removeVolumesInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1547
          },
          "name": "restartInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1563
          },
          "name": "rmInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1579
          },
          "name": "securityOptsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1595
          },
          "name": "shmSizeInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1611
          },
          "name": "startInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1627
          },
          "name": "stdinOpenInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1643
          },
          "name": "sysctlsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1659
          },
          "name": "tmpfsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1675
          },
          "name": "ttyInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1867
          },
          "name": "ulimitInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUlimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1883
          },
          "name": "uploadInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUpload"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1691
          },
          "name": "userInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1707
          },
          "name": "usernsModeInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1899
          },
          "name": "volumesInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerVolumes"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1723
          },
          "name": "workingDirInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 975
          },
          "name": "attach",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1729
          },
          "name": "capabilities",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 996
          },
          "name": "command",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1017
          },
          "name": "cpuSet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1033
          },
          "name": "cpuShares",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1049
          },
          "name": "destroyGraceSeconds",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1745
          },
          "name": "devices",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerDevices"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1065
          },
          "name": "dns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1081
          },
          "name": "dnsOpts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1097
          },
          "name": "dnsSearch",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1113
          },
          "name": "domainname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1129
          },
          "name": "entrypoint",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1145
          },
          "name": "env",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1171
          },
          "name": "groupAdd",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1761
          },
          "name": "healthcheck",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHealthcheck"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1777
          },
          "name": "host",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHost"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1187
          },
          "name": "hostname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1208
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1221
          },
          "name": "init",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1247
          },
          "name": "ipcMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1793
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1263
          },
          "name": "links",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1279
          },
          "name": "logDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1295
          },
          "name": "logOpts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1311
          },
          "name": "logs",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1327
          },
          "name": "maxRetryCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1343
          },
          "name": "memory",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1359
          },
          "name": "memorySwap",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1809
          },
          "name": "mounts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMounts"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1375
          },
          "name": "mustRun",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1391
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1404
          },
          "name": "networkAlias",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1425
          },
          "name": "networkMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1441
          },
          "name": "networks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1825
          },
          "name": "networksAdvanced",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerNetworksAdvanced"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1457
          },
          "name": "pidMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1841
          },
          "name": "ports",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerPorts"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1473
          },
          "name": "privileged",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1489
          },
          "name": "publishAllPorts",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1505
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1521
          },
          "name": "removeVolumes",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1537
          },
          "name": "restart",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1553
          },
          "name": "rm",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1569
          },
          "name": "securityOpts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1585
          },
          "name": "shmSize",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1601
          },
          "name": "start",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1617
          },
          "name": "stdinOpen",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1633
          },
          "name": "sysctls",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1649
          },
          "name": "tmpfs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1665
          },
          "name": "tty",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1857
          },
          "name": "ulimit",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUlimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1873
          },
          "name": "upload",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUpload"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1681
          },
          "name": "user",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1697
          },
          "name": "usernsMode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1889
          },
          "name": "volumes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerVolumes"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1713
          },
          "name": "workingDir",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerCapabilities": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerCapabilities",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 384
      },
      "name": "ContainerCapabilities",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#add Container#add}",
            "stability": "stable",
            "summary": "List of linux capabilities to add."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 390
          },
          "name": "add",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#drop Container#drop}",
            "stability": "stable",
            "summary": "List of linux capabilities to drop."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 396
          },
          "name": "drop",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 9
      },
      "name": "ContainerConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The easiest way to get this value is to use the `docker_image` resource as is shown in the example.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#image Container#image}",
            "stability": "stable",
            "summary": "The ID of the image to back this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 93
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#name Container#name}",
            "stability": "stable",
            "summary": "The name of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 159
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#attach Container#attach}",
            "stability": "stable",
            "summary": "If `true` attach to the container after its creation and waits the end of its execution. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 15
          },
          "name": "attach",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#capabilities Container#capabilities}",
            "stability": "stable",
            "summary": "capabilities block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 285
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, to run `/usr/bin/myprogram -f baz.conf` set the command to be `[\"/usr/bin/myprogram\",\"-\",\"baz.con\"]`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#command Container#command}",
            "stability": "stable",
            "summary": "The command to use to start the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 21
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#cpu_set Container#cpu_set}",
            "stability": "stable",
            "summary": "A comma-separated list or hyphen-separated range of CPUs a container can use, e.g. `0-1`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 27
          },
          "name": "cpuSet",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#cpu_shares Container#cpu_shares}",
            "stability": "stable",
            "summary": "CPU shares (relative weight) for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 33
          },
          "name": "cpuShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Container will be destroyed after `n` seconds or on successful stop.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#destroy_grace_seconds Container#destroy_grace_seconds}",
            "stability": "stable",
            "summary": "If defined will attempt to stop the container before destroying."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 39
          },
          "name": "destroyGraceSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#devices Container#devices}",
            "stability": "stable",
            "summary": "devices block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 291
          },
          "name": "devices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerDevices"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#dns Container#dns}",
            "stability": "stable",
            "summary": "DNS servers to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 45
          },
          "name": "dns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#dns_opts Container#dns_opts}",
            "stability": "stable",
            "summary": "DNS options used by the DNS provider(s), see `resolv.conf` documentation for valid list of options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 51
          },
          "name": "dnsOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#dns_search Container#dns_search}",
            "stability": "stable",
            "summary": "DNS search domains that are used when bare unqualified hostnames are used inside of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 57
          },
          "name": "dnsSearch",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#domainname Container#domainname}",
            "stability": "stable",
            "summary": "Domain name of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 63
          },
          "name": "domainname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The Entrypoint allows you to configure a container to run as an executable. For example, to run `/usr/bin/myprogram` when starting a container, set the entrypoint to be `\"/usr/bin/myprogra\"]`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#entrypoint Container#entrypoint}",
            "stability": "stable",
            "summary": "The command to use as the Entrypoint for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 69
          },
          "name": "entrypoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#env Container#env}",
            "stability": "stable",
            "summary": "Environment variables to set in the form of `KEY=VALUE`, e.g. `DEBUG=0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 75
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#group_add Container#group_add}",
            "stability": "stable",
            "summary": "Additional groups for the container user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 81
          },
          "name": "groupAdd",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#healthcheck Container#healthcheck}",
            "stability": "stable",
            "summary": "healthcheck block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 297
          },
          "name": "healthcheck",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHealthcheck"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#host Container#host}",
            "stability": "stable",
            "summary": "host block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 303
          },
          "name": "host",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerHost"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#hostname Container#hostname}",
            "stability": "stable",
            "summary": "Hostname of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 87
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If unset this will default to the `dockerd` defaults.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#init Container#init}",
            "stability": "stable",
            "summary": "Configured whether an init process should be injected for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 99
          },
          "name": "init",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ipc_mode Container#ipc_mode}",
            "stability": "stable",
            "summary": "IPC sharing mode for the container. Possible values are: `none`, `private`, `shareable`, `container:<name|id>` or `host`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 105
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#labels Container#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 309
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#links Container#links}",
            "stability": "stable",
            "summary": "Set of links for link based connectivity between containers that are running on the same host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 111
          },
          "name": "links",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#log_driver Container#log_driver}",
            "stability": "stable",
            "summary": "The logging driver to use for the container. Defaults to `json-file`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 117
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#log_opts Container#log_opts}",
            "stability": "stable",
            "summary": "Key/value pairs to use as options for the logging driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 123
          },
          "name": "logOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#logs Container#logs}",
            "stability": "stable",
            "summary": "Save the container logs (`attach` must be enabled). Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 129
          },
          "name": "logs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#max_retry_count Container#max_retry_count}",
            "stability": "stable",
            "summary": "The maximum amount of times to an attempt a restart when `restart` is set to 'on-failure'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 135
          },
          "name": "maxRetryCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#memory Container#memory}",
            "stability": "stable",
            "summary": "The memory limit for the container in MBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 141
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This setting may compute to `-1` after `terraform apply` if the target host doesn't support memory swap, when that is the case docker will use a soft limitation.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#memory_swap Container#memory_swap}",
            "stability": "stable",
            "summary": "The total memory limit (memory + swap) for the container in MBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 147
          },
          "name": "memorySwap",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#mounts Container#mounts}",
            "stability": "stable",
            "summary": "mounts block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 315
          },
          "name": "mounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMounts"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `false`, then as long as the container exists, Terraform assumes it is successful. Defaults to `true`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#must_run Container#must_run}",
            "stability": "stable",
            "summary": "If `true`, then the Docker container will be kept running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 153
          },
          "name": "mustRun",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#network_alias Container#network_alias}",
            "stability": "stable",
            "summary": "Set an alias for the container in all specified networks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 165
          },
          "name": "networkAlias",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#network_mode Container#network_mode}",
            "stability": "stable",
            "summary": "Network mode of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 171
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#networks Container#networks}",
            "stability": "stable",
            "summary": "ID of the networks in which the container is."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 177
          },
          "name": "networks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#networks_advanced Container#networks_advanced}",
            "stability": "stable",
            "summary": "networks_advanced block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 321
          },
          "name": "networksAdvanced",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerNetworksAdvanced"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#pid_mode Container#pid_mode}",
            "stability": "stable",
            "summary": "he PID (Process) Namespace mode for the container. Either `container:<name|id>` or `host`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 183
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ports Container#ports}",
            "stability": "stable",
            "summary": "ports block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 327
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerPorts"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#privileged Container#privileged}",
            "stability": "stable",
            "summary": "If `true`, the container runs in privileged mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 189
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#publish_all_ports Container#publish_all_ports}",
            "stability": "stable",
            "summary": "Publish all ports of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 195
          },
          "name": "publishAllPorts",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#read_only Container#read_only}",
            "stability": "stable",
            "summary": "If `true`, the container will be started as readonly. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 201
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#remove_volumes Container#remove_volumes}",
            "stability": "stable",
            "summary": "If `true`, it will remove anonymous volumes associated with the container. Defaults to `true`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 207
          },
          "name": "removeVolumes",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#restart Container#restart}",
            "stability": "stable",
            "summary": "The restart policy for the container. Must be one of 'no', 'on-failure', 'always', 'unless-stopped'. Defaults to `no`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 213
          },
          "name": "restart",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Terraform won't check this container after creation. Defaults to `false`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#rm Container#rm}",
            "stability": "stable",
            "summary": "If `true`, then the container will be automatically removed after his execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 219
          },
          "name": "rm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#security_opts Container#security_opts}",
            "stability": "stable",
            "summary": "List of string values to customize labels for MLS systems, such as SELinux. See https://docs.docker.com/engine/reference/run/#security-configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 225
          },
          "name": "securityOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#shm_size Container#shm_size}",
            "stability": "stable",
            "summary": "Size of `/dev/shm` in MBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 231
          },
          "name": "shmSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `false`, then the container is only created. Defaults to `true`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#start Container#start}",
            "stability": "stable",
            "summary": "If `true`, then the Docker container will be started after creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 237
          },
          "name": "start",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#stdin_open Container#stdin_open}",
            "stability": "stable",
            "summary": "If `true`, keep STDIN open even if not attached (`docker run -i`). Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 243
          },
          "name": "stdinOpen",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#sysctls Container#sysctls}",
            "stability": "stable",
            "summary": "A map of kernel parameters (sysctls) to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 249
          },
          "name": "sysctls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#tmpfs Container#tmpfs}",
            "stability": "stable",
            "summary": "A map of container directories which should be replaced by `tmpfs mounts`, and their corresponding mount options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 255
          },
          "name": "tmpfs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#tty Container#tty}",
            "stability": "stable",
            "summary": "If `true`, allocate a pseudo-tty (`docker run -t`). Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 261
          },
          "name": "tty",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ulimit Container#ulimit}",
            "stability": "stable",
            "summary": "ulimit block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 333
          },
          "name": "ulimit",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUlimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#upload Container#upload}",
            "stability": "stable",
            "summary": "upload block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 339
          },
          "name": "upload",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerUpload"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Format is `user` or `user:group` which user and group can be passed literraly or by name.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#user Container#user}",
            "stability": "stable",
            "summary": "User used for run the first process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 267
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#userns_mode Container#userns_mode}",
            "stability": "stable",
            "summary": "Sets the usernamespace mode for the container when usernamespace remapping option is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 273
          },
          "name": "usernsMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#volumes Container#volumes}",
            "stability": "stable",
            "summary": "volumes block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 345
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerVolumes"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#working_dir Container#working_dir}",
            "stability": "stable",
            "summary": "The working directory for commands to run in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 279
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerDevices": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerDevices",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 407
      },
      "name": "ContainerDevices",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#host_path Container#host_path}",
            "stability": "stable",
            "summary": "The path on the host where the device is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 419
          },
          "name": "hostPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#container_path Container#container_path}",
            "stability": "stable",
            "summary": "The path in the container where the device will be bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 413
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#permissions Container#permissions}",
            "stability": "stable",
            "summary": "The cgroup permissions given to the container to access the device. Defaults to `rwm`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 425
          },
          "name": "permissions",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerHealthcheck": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerHealthcheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 437
      },
      "name": "ContainerHealthcheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, to run `curl -f localhost/health` set the command to be `[\"CMD\", \"curl\", \"-f\", \"localhost/health\"]`.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#test Container#test}",
            "stability": "stable",
            "summary": "Command to run to check health."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 461
          },
          "name": "test",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#interval Container#interval}",
            "stability": "stable",
            "summary": "Time between running the check (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 443
          },
          "name": "interval",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#retries Container#retries}",
            "stability": "stable",
            "summary": "Consecutive failures needed to report unhealthy. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 449
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#start_period Container#start_period}",
            "stability": "stable",
            "summary": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 455
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#timeout Container#timeout}",
            "stability": "stable",
            "summary": "Maximum time to allow one check to run (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 467
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerHost": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerHost",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 481
      },
      "name": "ContainerHost",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#host Container#host}",
            "stability": "stable",
            "summary": "Hostname to add."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 487
          },
          "name": "host",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ip Container#ip}",
            "stability": "stable",
            "summary": "IP address this hostname should resolve to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 493
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 504
      },
      "name": "ContainerLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#label Container#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 510
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#value Container#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 516
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerMounts": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerMounts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 626
      },
      "name": "ContainerMounts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#target Container#target}",
            "stability": "stable",
            "summary": "Container path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 644
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#type Container#type}",
            "stability": "stable",
            "summary": "The mount type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 650
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#bind_options Container#bind_options}",
            "stability": "stable",
            "summary": "bind_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 656
          },
          "name": "bindOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMountsBindOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#read_only Container#read_only}",
            "stability": "stable",
            "summary": "Whether the mount should be read-only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 632
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#source Container#source}",
            "stability": "stable",
            "summary": "Mount source (e.g. a volume name, a host path)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 638
          },
          "name": "source",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#tmpfs_options Container#tmpfs_options}",
            "stability": "stable",
            "summary": "tmpfs_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 662
          },
          "name": "tmpfsOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMountsTmpfsOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#volume_options Container#volume_options}",
            "stability": "stable",
            "summary": "volume_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 668
          },
          "name": "volumeOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMountsVolumeOptions"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerMountsBindOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerMountsBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 527
      },
      "name": "ContainerMountsBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#propagation Container#propagation}",
            "stability": "stable",
            "summary": "A propagation mode with the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 533
          },
          "name": "propagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerMountsTmpfsOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerMountsTmpfsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 543
      },
      "name": "ContainerMountsTmpfsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#mode Container#mode}",
            "stability": "stable",
            "summary": "The permission mode for the tmpfs mount in an integer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 549
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#size_bytes Container#size_bytes}",
            "stability": "stable",
            "summary": "The size for the tmpfs mount in bytes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 555
          },
          "name": "sizeBytes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerMountsVolumeOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerMountsVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 589
      },
      "name": "ContainerMountsVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#driver_name Container#driver_name}",
            "stability": "stable",
            "summary": "Name of the driver to use to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 595
          },
          "name": "driverName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#driver_options Container#driver_options}",
            "stability": "stable",
            "summary": "key/value map of driver specific options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 601
          },
          "name": "driverOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#labels Container#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 613
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ContainerMountsVolumeOptionsLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#no_copy Container#no_copy}",
            "stability": "stable",
            "summary": "Populate volume with data from the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 607
          },
          "name": "noCopy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerMountsVolumeOptionsLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerMountsVolumeOptionsLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 566
      },
      "name": "ContainerMountsVolumeOptionsLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#label Container#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 572
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#value Container#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 578
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerNetworkData": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.ComplexComputedList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerNetworkData",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/complex-computed-list.ts",
          "line": 51
        },
        "parameters": [
          {
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.ITerraformResource"
            }
          },
          {
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "complexComputedListIndex",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 347
      },
      "name": "ContainerNetworkData",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 350
          },
          "name": "gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 355
          },
          "name": "globalIpv6Address",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 360
          },
          "name": "globalIpv6PrefixLength",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 365
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 370
          },
          "name": "ipPrefixLength",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 375
          },
          "name": "ipv6Gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 380
          },
          "name": "networkName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerNetworksAdvanced": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerNetworksAdvanced",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 684
      },
      "name": "ContainerNetworksAdvanced",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#name Container#name}",
            "stability": "stable",
            "summary": "The name of the network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 708
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#aliases Container#aliases}",
            "stability": "stable",
            "summary": "The network aliases of the container in the specific network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 690
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ipv4_address Container#ipv4_address}",
            "stability": "stable",
            "summary": "The IPV4 address of the container in the specific network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 696
          },
          "name": "ipv4Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ipv6_address Container#ipv6_address}",
            "stability": "stable",
            "summary": "The IPV6 address of the container in the specific network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 702
          },
          "name": "ipv6Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerPorts": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerPorts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 721
      },
      "name": "ContainerPorts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#internal Container#internal}",
            "stability": "stable",
            "summary": "Port within the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 733
          },
          "name": "internal",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#external Container#external}",
            "stability": "stable",
            "summary": "Port exposed out of the container. If not given a free random port `>= 32768` will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 727
          },
          "name": "external",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#ip Container#ip}",
            "stability": "stable",
            "summary": "IP address/mask that can access this port. Defaults to `0.0.0.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 739
          },
          "name": "ip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#protocol Container#protocol}",
            "stability": "stable",
            "summary": "Protocol that can be used over this port. Defaults to `tcp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 745
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerUlimit": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerUlimit",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 758
      },
      "name": "ContainerUlimit",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#hard Container#hard}",
            "stability": "stable",
            "summary": "The hard limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 764
          },
          "name": "hard",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#name Container#name}",
            "stability": "stable",
            "summary": "The name of the ulimit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 770
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#soft Container#soft}",
            "stability": "stable",
            "summary": "The soft limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 776
          },
          "name": "soft",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerUpload": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerUpload",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 788
      },
      "name": "ContainerUpload",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#file Container#file}",
            "stability": "stable",
            "summary": "Path to the file in the container where is upload goes to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 812
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Conflicts with `content_base64` & `source`\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#content Container#content}",
            "stability": "stable",
            "summary": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 794
          },
          "name": "content",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This allows safely uploading non-UTF8 binary data, but is recommended only for larger binary content such as the result of the `base64encode` interpolation function. See [here](https://github.com/terraform-providers/terraform-provider-docker/issues/48#issuecomment-374174588) for the reason. Conflicts with `content` & `source`\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#content_base64 Container#content_base64}",
            "stability": "stable",
            "summary": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 800
          },
          "name": "contentBase64",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#executable Container#executable}",
            "stability": "stable",
            "summary": "If `true`, the file will be uploaded with user executable permission. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 806
          },
          "name": "executable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This allows for large file uploads that do not get stored in state. Conflicts with `content` & `content_base64`\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#source Container#source}",
            "stability": "stable",
            "summary": "A filename that references a file which will be uploaded as the object content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 818
          },
          "name": "source",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#source_hash Container#source_hash}",
            "stability": "stable",
            "summary": "If using `source`, this will force an update if the file content has updated but the filename has not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 824
          },
          "name": "sourceHash",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ContainerVolumes": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ContainerVolumes",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 839
      },
      "name": "ContainerVolumes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#container_path Container#container_path}",
            "stability": "stable",
            "summary": "The path in the container where the volume will be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 845
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#from_container Container#from_container}",
            "stability": "stable",
            "summary": "The container where the volume is coming from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 851
          },
          "name": "fromContainer",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#host_path Container#host_path}",
            "stability": "stable",
            "summary": "The path on the host where the volume is coming from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 857
          },
          "name": "hostPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#read_only Container#read_only}",
            "stability": "stable",
            "summary": "If `true`, this volume will be readonly. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 863
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/container.html#volume_name Container#volume_name}",
            "stability": "stable",
            "summary": "The name of the docker volume which should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 869
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerNetwork": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/d/network.html docker_network}."
      },
      "fqn": "@cdktf/provider-docker.DataDockerNetwork",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/d/network.html docker_network} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-docker-network.ts",
          "line": 56
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.DataDockerNetworkConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-docker-network.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 90
          },
          "name": "ipamConfig",
          "parameters": [
            {
              "name": "index",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@cdktf/provider-docker.DataDockerNetworkIpamConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 108
          },
          "name": "options",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 121
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataDockerNetwork",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 75
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 80
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 85
          },
          "name": "internal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 103
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 113
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 96
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerNetworkConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DataDockerNetworkConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-docker-network.ts",
        "line": 9
      },
      "name": "DataDockerNetworkConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/d/network.html#name DataDockerNetwork#name}",
            "stability": "stable",
            "summary": "The name of the Docker network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 15
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerNetworkIpamConfig": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.ComplexComputedList",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DataDockerNetworkIpamConfig",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/complex-computed-list.ts",
          "line": 51
        },
        "parameters": [
          {
            "name": "terraformResource",
            "type": {
              "fqn": "cdktf.ITerraformResource"
            }
          },
          {
            "name": "terraformAttribute",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "complexComputedListIndex",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-docker-network.ts",
        "line": 17
      },
      "name": "DataDockerNetworkIpamConfig",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 20
          },
          "name": "auxAddress",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 25
          },
          "name": "gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 30
          },
          "name": "ipRange",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-network.ts",
            "line": 35
          },
          "name": "subnet",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerPlugin": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/d/plugin.html docker_plugin}."
      },
      "fqn": "@cdktf/provider-docker.DataDockerPlugin",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/d/plugin.html docker_plugin} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-docker-plugin.ts",
          "line": 40
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-docker.DataDockerPluginConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-docker-plugin.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 67
          },
          "name": "resetAlias"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 98
          },
          "name": "resetId"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 120
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataDockerPlugin",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 76
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 81
          },
          "name": "env",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 86
          },
          "name": "grantAllPermissions",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 107
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 112
          },
          "name": "pluginReference",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 71
          },
          "name": "aliasInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 102
          },
          "name": "idInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 61
          },
          "name": "alias",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 92
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerPluginConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DataDockerPluginConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-docker-plugin.ts",
        "line": 9
      },
      "name": "DataDockerPluginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/d/plugin.html#alias DataDockerPlugin#alias}",
            "stability": "stable",
            "summary": "The alias of the Docker plugin. If the tag is omitted, `:latest` is complemented to the attribute value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 15
          },
          "name": "alias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/d/plugin.html#id DataDockerPlugin#id}",
            "stability": "stable",
            "summary": "The ID of the plugin, which has precedence over the `alias` of both are given."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-plugin.ts",
            "line": 21
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerRegistryImage": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformDataSource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/d/registry_image.html docker_registry_image}."
      },
      "fqn": "@cdktf/provider-docker.DataDockerRegistryImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/d/registry_image.html docker_registry_image} Data Source."
        },
        "locationInModule": {
          "filename": "src/data-docker-registry-image.ts",
          "line": 34
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.DataDockerRegistryImageConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/data-docker-registry-image.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 79
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformDataSource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DataDockerRegistryImage",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 53
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 66
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 71
          },
          "name": "sha256Digest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 59
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DataDockerRegistryImageConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DataDockerRegistryImageConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/data-docker-registry-image.ts",
        "line": 9
      },
      "name": "DataDockerRegistryImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/d/registry_image.html#name DataDockerRegistryImage#name}",
            "stability": "stable",
            "summary": "The name of the Docker image, including any tags. e.g. `alpine:latest`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/data-docker-registry-image.ts",
            "line": 15
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.DockerProvider": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformProvider",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker docker}."
      },
      "fqn": "@cdktf/provider-docker.DockerProvider",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker docker} Resource."
        },
        "locationInModule": {
          "filename": "src/docker-provider.ts",
          "line": 114
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-docker.DockerProviderConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/docker-provider.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 224
          },
          "name": "resetAlias"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 144
          },
          "name": "resetCaMaterial"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 160
          },
          "name": "resetCertMaterial"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 176
          },
          "name": "resetCertPath"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 192
          },
          "name": "resetHost"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 208
          },
          "name": "resetKeyMaterial"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 240
          },
          "name": "resetRegistryAuth"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 252
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformProvider",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "DockerProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 228
          },
          "name": "aliasInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 148
          },
          "name": "caMaterialInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 164
          },
          "name": "certMaterialInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 180
          },
          "name": "certPathInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 196
          },
          "name": "hostInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 212
          },
          "name": "keyMaterialInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 244
          },
          "name": "registryAuthInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.DockerProviderRegistryAuth"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 218
          },
          "name": "alias",
          "optional": true,
          "overrides": "cdktf.TerraformProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 138
          },
          "name": "caMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 154
          },
          "name": "certMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 170
          },
          "name": "certPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 186
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 202
          },
          "name": "keyMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 234
          },
          "name": "registryAuth",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.DockerProviderRegistryAuth"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.DockerProviderConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DockerProviderConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/docker-provider.ts",
        "line": 9
      },
      "name": "DockerProviderConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#alias DockerProvider#alias}",
            "stability": "stable",
            "summary": "Alias name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 45
          },
          "name": "alias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#ca_material DockerProvider#ca_material}",
            "stability": "stable",
            "summary": "PEM-encoded content of Docker host CA certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 15
          },
          "name": "caMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#cert_material DockerProvider#cert_material}",
            "stability": "stable",
            "summary": "PEM-encoded content of Docker client certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 21
          },
          "name": "certMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#cert_path DockerProvider#cert_path}",
            "stability": "stable",
            "summary": "Path to directory with Docker TLS config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 27
          },
          "name": "certPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#host DockerProvider#host}",
            "stability": "stable",
            "summary": "The Docker daemon address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 33
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#key_material DockerProvider#key_material}",
            "stability": "stable",
            "summary": "PEM-encoded content of Docker client private key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 39
          },
          "name": "keyMaterial",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#registry_auth DockerProvider#registry_auth}",
            "stability": "stable",
            "summary": "registry_auth block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 51
          },
          "name": "registryAuth",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.DockerProviderRegistryAuth"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.DockerProviderRegistryAuth": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.DockerProviderRegistryAuth",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/docker-provider.ts",
        "line": 53
      },
      "name": "DockerProviderRegistryAuth",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#address DockerProvider#address}",
            "stability": "stable",
            "summary": "Address of the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 59
          },
          "name": "address",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#config_file DockerProvider#config_file}",
            "stability": "stable",
            "summary": "Path to docker json file for registry auth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 65
          },
          "name": "configFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#config_file_content DockerProvider#config_file_content}",
            "stability": "stable",
            "summary": "Plain content of the docker json file for registry auth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 71
          },
          "name": "configFileContent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#password DockerProvider#password}",
            "stability": "stable",
            "summary": "Password for the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 77
          },
          "name": "password",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker#username DockerProvider#username}",
            "stability": "stable",
            "summary": "Username for the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/docker-provider.ts",
            "line": 83
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Image": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/image.html docker_image}."
      },
      "fqn": "@cdktf/provider-docker.Image",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/image.html docker_image} Resource."
        },
        "locationInModule": {
          "filename": "src/image.ts",
          "line": 136
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.ImageConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/image.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 259
          },
          "name": "resetBuildAttribute"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 167
          },
          "name": "resetForceRemove"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 188
          },
          "name": "resetKeepLocally"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 227
          },
          "name": "resetPullTrigger"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 243
          },
          "name": "resetPullTriggers"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 271
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Image",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 176
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 197
          },
          "name": "latest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 210
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 215
          },
          "name": "output",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 263
          },
          "name": "buildAttributeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 171
          },
          "name": "forceRemoveInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 192
          },
          "name": "keepLocallyInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 231
          },
          "name": "pullTriggerInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 247
          },
          "name": "pullTriggersInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 253
          },
          "name": "buildAttribute",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 161
          },
          "name": "forceRemove",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 182
          },
          "name": "keepLocally",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 203
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 221
          },
          "name": "pullTrigger",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 237
          },
          "name": "pullTriggers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ImageBuild": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ImageBuild",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/image.ts",
        "line": 47
      },
      "name": "ImageBuild",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#path Image#path}",
            "stability": "stable",
            "summary": "Context path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 83
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#build_arg Image#build_arg}",
            "stability": "stable",
            "summary": "Set build-time variables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 53
          },
          "name": "buildArg",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#dockerfile Image#dockerfile}",
            "stability": "stable",
            "summary": "Name of the Dockerfile. Defaults to `Dockerfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 59
          },
          "name": "dockerfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#force_remove Image#force_remove}",
            "stability": "stable",
            "summary": "Always remove intermediate containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 65
          },
          "name": "forceRemove",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#label Image#label}",
            "stability": "stable",
            "summary": "Set metadata for an image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 71
          },
          "name": "label",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#no_cache Image#no_cache}",
            "stability": "stable",
            "summary": "Do not use cache when building the image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 77
          },
          "name": "noCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#remove Image#remove}",
            "stability": "stable",
            "summary": "Remove intermediate containers after a successful build. Defaults to  `true`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 89
          },
          "name": "remove",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#tag Image#tag}",
            "stability": "stable",
            "summary": "Name and optionally a tag in the 'name:tag' format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 95
          },
          "name": "tag",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#target Image#target}",
            "stability": "stable",
            "summary": "Set the target build stage to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 101
          },
          "name": "target",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ImageConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ImageConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/image.ts",
        "line": 9
      },
      "name": "ImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#name Image#name}",
            "stability": "stable",
            "summary": "The name of the Docker image, including any tags or SHA256 repo digests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 27
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#build Image#build}",
            "stability": "stable",
            "summary": "build block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 45
          },
          "name": "buildAttribute",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#force_remove Image#force_remove}",
            "stability": "stable",
            "summary": "If true, then the image is removed forcibly when the resource is destroyed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 15
          },
          "name": "forceRemove",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is false, it will delete the image from the docker local storage on destroy operation.\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#keep_locally Image#keep_locally}",
            "stability": "stable",
            "summary": "If true, then the Docker image won't be deleted on destroy operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 21
          },
          "name": "keepLocally",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#pull_trigger Image#pull_trigger}",
            "stability": "stable",
            "summary": "A value which cause an image pull when changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 33
          },
          "name": "pullTrigger",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is used to store the image digest from the registry when using the [docker_registry_image](../data-sources/registry_image.md).\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/image.html#pull_triggers Image#pull_triggers}",
            "stability": "stable",
            "summary": "List of values which cause an image pull when changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/image.ts",
            "line": 39
          },
          "name": "pullTriggers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.Network": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/network.html docker_network}."
      },
      "fqn": "@cdktf/provider-docker.Network",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/network.html docker_network} Resource."
        },
        "locationInModule": {
          "filename": "src/network.ts",
          "line": 154
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.NetworkConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/network.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 190
          },
          "name": "resetAttachable"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 206
          },
          "name": "resetCheckDuplicate"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 222
          },
          "name": "resetDriver"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 243
          },
          "name": "resetIngress"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 259
          },
          "name": "resetInternal"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 341
          },
          "name": "resetIpamConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 275
          },
          "name": "resetIpamDriver"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 291
          },
          "name": "resetIpv6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 357
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 320
          },
          "name": "resetOptions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 369
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Network",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 231
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 308
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 329
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 194
          },
          "name": "attachableInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 210
          },
          "name": "checkDuplicateInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 226
          },
          "name": "driverInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 247
          },
          "name": "ingressInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 263
          },
          "name": "internalInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 345
          },
          "name": "ipamConfigInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkIpamConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 279
          },
          "name": "ipamDriverInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 295
          },
          "name": "ipv6Input",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 361
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 324
          },
          "name": "optionsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 184
          },
          "name": "attachable",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 200
          },
          "name": "checkDuplicate",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 216
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 237
          },
          "name": "ingress",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 253
          },
          "name": "internal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 335
          },
          "name": "ipamConfig",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkIpamConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 269
          },
          "name": "ipamDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 285
          },
          "name": "ipv6",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 351
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 301
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 314
          },
          "name": "options",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.NetworkConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.NetworkConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network.ts",
        "line": 9
      },
      "name": "NetworkConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#name Network#name}",
            "stability": "stable",
            "summary": "The name of the Docker network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 57
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#attachable Network#attachable}",
            "stability": "stable",
            "summary": "Enable manual container attachment to the network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 15
          },
          "name": "attachable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#check_duplicate Network#check_duplicate}",
            "stability": "stable",
            "summary": "Requests daemon to check for networks with same name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 21
          },
          "name": "checkDuplicate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#driver Network#driver}",
            "stability": "stable",
            "summary": "The driver of the Docker network. Possible values are `bridge`, `host`, `overlay`, `macvlan`. See [network docs](https://docs.docker.com/network/#network-drivers) for more details."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 27
          },
          "name": "driver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#ingress Network#ingress}",
            "stability": "stable",
            "summary": "Create swarm routing-mesh network. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 33
          },
          "name": "ingress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#internal Network#internal}",
            "stability": "stable",
            "summary": "Whether the network is internal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 39
          },
          "name": "internal",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#ipam_config Network#ipam_config}",
            "stability": "stable",
            "summary": "ipam_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 69
          },
          "name": "ipamConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkIpamConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#ipam_driver Network#ipam_driver}",
            "stability": "stable",
            "summary": "Driver used by the custom IP scheme of the network. Defaults to `default`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 45
          },
          "name": "ipamDriver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#ipv6 Network#ipv6}",
            "stability": "stable",
            "summary": "Enable IPv6 networking. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 51
          },
          "name": "ipv6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#labels Network#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 75
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.NetworkLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#options Network#options}",
            "stability": "stable",
            "summary": "Only available with bridge networks. See [bridge options docs](https://docs.docker.com/engine/reference/commandline/network_create/#bridge-driver-options) for more details."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 63
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.NetworkIpamConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.NetworkIpamConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network.ts",
        "line": 77
      },
      "name": "NetworkIpamConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#aux_address Network#aux_address}",
            "stability": "stable",
            "summary": "Auxiliary IPv4 or IPv6 addresses used by Network driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 83
          },
          "name": "auxAddress",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#gateway Network#gateway}",
            "stability": "stable",
            "summary": "The IP address of the gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 89
          },
          "name": "gateway",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#ip_range Network#ip_range}",
            "stability": "stable",
            "summary": "The ip range in CIDR form."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 95
          },
          "name": "ipRange",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#subnet Network#subnet}",
            "stability": "stable",
            "summary": "The subnet in CIDR form."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 101
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.NetworkLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.NetworkLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network.ts",
        "line": 114
      },
      "name": "NetworkLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#label Network#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 120
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/network.html#value Network#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network.ts",
            "line": 126
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Plugin": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/plugin.html docker_plugin}."
      },
      "fqn": "@cdktf/provider-docker.Plugin",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/plugin.html docker_plugin} Resource."
        },
        "locationInModule": {
          "filename": "src/plugin.ts",
          "line": 105
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.PluginConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/plugin.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 139
          },
          "name": "resetAlias"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 171
          },
          "name": "resetEnabled"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 155
          },
          "name": "resetEnableTimeout"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 187
          },
          "name": "resetEnv"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 203
          },
          "name": "resetForceDestroy"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 219
          },
          "name": "resetForceDisable"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 235
          },
          "name": "resetGrantAllPermissions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 274
          },
          "name": "resetGrantPermissions"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 286
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Plugin",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 244
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 257
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 262
          },
          "name": "pluginReference",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 143
          },
          "name": "aliasInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 175
          },
          "name": "enabledInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 159
          },
          "name": "enableTimeoutInput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 191
          },
          "name": "envInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 207
          },
          "name": "forceDestroyInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 223
          },
          "name": "forceDisableInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 239
          },
          "name": "grantAllPermissionsInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 278
          },
          "name": "grantPermissionsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.PluginGrantPermissions"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 133
          },
          "name": "alias",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 165
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 149
          },
          "name": "enableTimeout",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 181
          },
          "name": "env",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 197
          },
          "name": "forceDestroy",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 213
          },
          "name": "forceDisable",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 229
          },
          "name": "grantAllPermissions",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 268
          },
          "name": "grantPermissions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.PluginGrantPermissions"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 250
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.PluginConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.PluginConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/plugin.ts",
        "line": 9
      },
      "name": "PluginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#name Plugin#name}",
            "stability": "stable",
            "summary": "Docker Plugin name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 57
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#alias Plugin#alias}",
            "stability": "stable",
            "summary": "Docker Plugin alias."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 15
          },
          "name": "alias",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#enabled Plugin#enabled}",
            "stability": "stable",
            "summary": "If `true` the plugin is enabled. Defaults to `true`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 27
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#enable_timeout Plugin#enable_timeout}",
            "stability": "stable",
            "summary": "HTTP client timeout to enable the plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 21
          },
          "name": "enableTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#env Plugin#env}",
            "stability": "stable",
            "summary": "The environment variables in the form of `KEY=VALUE`, e.g. `DEBUG=0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 33
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#force_destroy Plugin#force_destroy}",
            "stability": "stable",
            "summary": "If true, then the plugin is destroyed forcibly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 39
          },
          "name": "forceDestroy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#force_disable Plugin#force_disable}",
            "stability": "stable",
            "summary": "If true, then the plugin is disabled forcibly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 45
          },
          "name": "forceDisable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#grant_all_permissions Plugin#grant_all_permissions}",
            "stability": "stable",
            "summary": "If true, grant all permissions necessary to run the plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 51
          },
          "name": "grantAllPermissions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#grant_permissions Plugin#grant_permissions}",
            "stability": "stable",
            "summary": "grant_permissions block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 63
          },
          "name": "grantPermissions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.PluginGrantPermissions"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.PluginGrantPermissions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.PluginGrantPermissions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/plugin.ts",
        "line": 65
      },
      "name": "PluginGrantPermissions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#name Plugin#name}",
            "stability": "stable",
            "summary": "The name of the permission."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 71
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/plugin.html#value Plugin#value}",
            "stability": "stable",
            "summary": "The value of the permission."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/plugin.ts",
            "line": 77
          },
          "name": "value",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.RegistryImage": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html docker_registry_image}."
      },
      "fqn": "@cdktf/provider-docker.RegistryImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html docker_registry_image} Resource."
        },
        "locationInModule": {
          "filename": "src/registry-image.ts",
          "line": 374
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.RegistryImageConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/registry-image.ts",
        "line": 361
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 441
          },
          "name": "resetBuildAttribute"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 407
          },
          "name": "resetKeepRemotely"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 453
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "RegistryImage",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 395
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 424
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 429
          },
          "name": "sha256Digest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 445
          },
          "name": "buildAttributeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.RegistryImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 411
          },
          "name": "keepRemotelyInput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 435
          },
          "name": "buildAttribute",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.RegistryImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 401
          },
          "name": "keepRemotely",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 417
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.RegistryImageBuild": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.RegistryImageBuild",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/registry-image.ts",
        "line": 124
      },
      "name": "RegistryImageBuild",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#context RegistryImage#context}",
            "stability": "stable",
            "summary": "The path to the context folder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 154
          },
          "name": "context",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#auth_config RegistryImage#auth_config}",
            "stability": "stable",
            "summary": "auth_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 310
          },
          "name": "authConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.RegistryImageBuildAuthConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#build_args RegistryImage#build_args}",
            "stability": "stable",
            "summary": "Pairs for build-time variables in the form TODO."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 130
          },
          "name": "buildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#build_id RegistryImage#build_id}",
            "stability": "stable",
            "summary": "BuildID is an optional identifier that can be passed together with the build request. The."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 136
          },
          "name": "buildId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cache_from RegistryImage#cache_from}",
            "stability": "stable",
            "summary": "Images to consider as cache sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 142
          },
          "name": "cacheFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cgroup_parent RegistryImage#cgroup_parent}",
            "stability": "stable",
            "summary": "Optional parent cgroup for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 148
          },
          "name": "cgroupParent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cpu_period RegistryImage#cpu_period}",
            "stability": "stable",
            "summary": "The length of a CPU period in microseconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 160
          },
          "name": "cpuPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cpu_quota RegistryImage#cpu_quota}",
            "stability": "stable",
            "summary": "Microseconds of CPU time that the container can get in a CPU period."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 166
          },
          "name": "cpuQuota",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cpu_set_cpus RegistryImage#cpu_set_cpus}",
            "stability": "stable",
            "summary": "CPUs in which to allow execution (e.g., `0-3`, `0`, `1`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 172
          },
          "name": "cpuSetCpus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cpu_set_mems RegistryImage#cpu_set_mems}",
            "stability": "stable",
            "summary": "MEMs in which to allow execution (`0-3`, `0`, `1`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 178
          },
          "name": "cpuSetMems",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#cpu_shares RegistryImage#cpu_shares}",
            "stability": "stable",
            "summary": "CPU shares (relative weight)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 184
          },
          "name": "cpuShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#dockerfile RegistryImage#dockerfile}",
            "stability": "stable",
            "summary": "Dockerfile file. Defaults to `Dockerfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 190
          },
          "name": "dockerfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#extra_hosts RegistryImage#extra_hosts}",
            "stability": "stable",
            "summary": "A list of hostnames/IP mappings to add to the container’s /etc/hosts file. Specified in the form [\"hostname:IP\"]."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 196
          },
          "name": "extraHosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#force_remove RegistryImage#force_remove}",
            "stability": "stable",
            "summary": "Always remove intermediate containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 202
          },
          "name": "forceRemove",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#isolation RegistryImage#isolation}",
            "stability": "stable",
            "summary": "Isolation represents the isolation technology of a container. The supported values are."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 208
          },
          "name": "isolation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#labels RegistryImage#labels}",
            "stability": "stable",
            "summary": "User-defined key/value metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 214
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#memory RegistryImage#memory}",
            "stability": "stable",
            "summary": "Set memory limit for build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 220
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#memory_swap RegistryImage#memory_swap}",
            "stability": "stable",
            "summary": "Total memory (memory + swap), -1 to enable unlimited swap."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 226
          },
          "name": "memorySwap",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#network_mode RegistryImage#network_mode}",
            "stability": "stable",
            "summary": "Set the networking mode for the RUN instructions during build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 232
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#no_cache RegistryImage#no_cache}",
            "stability": "stable",
            "summary": "Do not use the cache when building the image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 238
          },
          "name": "noCache",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#platform RegistryImage#platform}",
            "stability": "stable",
            "summary": "Set platform if server is multi-platform capable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 244
          },
          "name": "platform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#pull_parent RegistryImage#pull_parent}",
            "stability": "stable",
            "summary": "Attempt to pull the image even if an older image exists locally."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 250
          },
          "name": "pullParent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#remote_context RegistryImage#remote_context}",
            "stability": "stable",
            "summary": "A Git repository URI or HTTP/HTTPS context URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 256
          },
          "name": "remoteContext",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#remove RegistryImage#remove}",
            "stability": "stable",
            "summary": "Remove intermediate containers after a successful build (default behavior)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 262
          },
          "name": "remove",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#security_opt RegistryImage#security_opt}",
            "stability": "stable",
            "summary": "The security options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 268
          },
          "name": "securityOpt",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#session_id RegistryImage#session_id}",
            "stability": "stable",
            "summary": "Set an ID for the build session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 274
          },
          "name": "sessionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#shm_size RegistryImage#shm_size}",
            "stability": "stable",
            "summary": "Size of /dev/shm in bytes. The size must be greater than 0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 280
          },
          "name": "shmSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#squash RegistryImage#squash}",
            "stability": "stable",
            "summary": "If true the new layers are squashed into a new image with a single new layer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 286
          },
          "name": "squash",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#suppress_output RegistryImage#suppress_output}",
            "stability": "stable",
            "summary": "Suppress the build output and print image ID on success."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 292
          },
          "name": "suppressOutput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#target RegistryImage#target}",
            "stability": "stable",
            "summary": "Set the target build stage to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 298
          },
          "name": "target",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#ulimit RegistryImage#ulimit}",
            "stability": "stable",
            "summary": "ulimit block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 316
          },
          "name": "ulimit",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.RegistryImageBuildUlimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#version RegistryImage#version}",
            "stability": "stable",
            "summary": "Version of the unerlying builder to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 304
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.RegistryImageBuildAuthConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.RegistryImageBuildAuthConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/registry-image.ts",
        "line": 29
      },
      "name": "RegistryImageBuildAuthConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#host_name RegistryImage#host_name}",
            "stability": "stable",
            "summary": "hostname of the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 47
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#auth RegistryImage#auth}",
            "stability": "stable",
            "summary": "the auth token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 35
          },
          "name": "auth",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#email RegistryImage#email}",
            "stability": "stable",
            "summary": "the user emal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 41
          },
          "name": "email",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#identity_token RegistryImage#identity_token}",
            "stability": "stable",
            "summary": "the identity token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 53
          },
          "name": "identityToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#password RegistryImage#password}",
            "stability": "stable",
            "summary": "the registry password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 59
          },
          "name": "password",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#registry_token RegistryImage#registry_token}",
            "stability": "stable",
            "summary": "the registry token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 65
          },
          "name": "registryToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#server_address RegistryImage#server_address}",
            "stability": "stable",
            "summary": "the server address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 71
          },
          "name": "serverAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#user_name RegistryImage#user_name}",
            "stability": "stable",
            "summary": "the registry user name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 77
          },
          "name": "userName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.RegistryImageBuildUlimit": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.RegistryImageBuildUlimit",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/registry-image.ts",
        "line": 94
      },
      "name": "RegistryImageBuildUlimit",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#hard RegistryImage#hard}",
            "stability": "stable",
            "summary": "soft limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 100
          },
          "name": "hard",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#name RegistryImage#name}",
            "stability": "stable",
            "summary": "type of ulimit, e.g. `nofile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 106
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#soft RegistryImage#soft}",
            "stability": "stable",
            "summary": "hard limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 112
          },
          "name": "soft",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.RegistryImageConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.RegistryImageConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/registry-image.ts",
        "line": 9
      },
      "name": "RegistryImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#name RegistryImage#name}",
            "stability": "stable",
            "summary": "The name of the Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 21
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#build RegistryImage#build}",
            "stability": "stable",
            "summary": "build block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 27
          },
          "name": "buildAttribute",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.RegistryImageBuild"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is false, it will delete the image from the docker registry on destroy operation. Defaults to `false`\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/registry_image.html#keep_remotely RegistryImage#keep_remotely}",
            "stability": "stable",
            "summary": "If true, then the Docker image won't be deleted on destroy operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/registry-image.ts",
            "line": 15
          },
          "name": "keepRemotely",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Secret": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/secret.html docker_secret}."
      },
      "fqn": "@cdktf/provider-docker.Secret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/secret.html docker_secret} Resource."
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 69
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.SecretConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 128
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 140
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 98
          },
          "name": "dataInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 103
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 116
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 132
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.SecretLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 91
          },
          "name": "data",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 122
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.SecretLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 109
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.SecretConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.SecretConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 9
      },
      "name": "SecretConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/secret.html#data Secret#data}",
            "stability": "stable",
            "summary": "Base64-url-safe-encoded secret data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 15
          },
          "name": "data",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/secret.html#name Secret#name}",
            "stability": "stable",
            "summary": "User-defined name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 21
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/secret.html#labels Secret#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 27
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.SecretLabels"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.SecretLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.SecretLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 29
      },
      "name": "SecretLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/secret.html#label Secret#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 35
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/secret.html#value Secret#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 41
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Service": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/service.html docker_service}."
      },
      "fqn": "@cdktf/provider-docker.Service",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/service.html docker_service} Resource."
        },
        "locationInModule": {
          "filename": "src/service.ts",
          "line": 1268
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "type": {
              "fqn": "@cdktf/provider-docker.ServiceConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1255
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1320
          },
          "name": "resetAuth"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1336
          },
          "name": "resetConvergeConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1352
          },
          "name": "resetEndpointSpec"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1368
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1384
          },
          "name": "resetMode"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1400
          },
          "name": "resetRollbackConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1429
          },
          "name": "resetUpdateConfig"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1441
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Service",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1295
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1308
          },
          "name": "nameInput",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1417
          },
          "name": "taskSpecInput",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1324
          },
          "name": "authInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceAuth"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1340
          },
          "name": "convergeConfigInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceConvergeConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1356
          },
          "name": "endpointSpecInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceEndpointSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1372
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1388
          },
          "name": "modeInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1404
          },
          "name": "rollbackConfigInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceRollbackConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1433
          },
          "name": "updateConfigInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceUpdateConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1314
          },
          "name": "auth",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceAuth"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1330
          },
          "name": "convergeConfig",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceConvergeConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1346
          },
          "name": "endpointSpec",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceEndpointSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1362
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1378
          },
          "name": "mode",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1301
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1394
          },
          "name": "rollbackConfig",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceRollbackConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1410
          },
          "name": "taskSpec",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1423
          },
          "name": "updateConfig",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceUpdateConfig"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceAuth": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceAuth",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 65
      },
      "name": "ServiceAuth",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#server_address Service#server_address}",
            "stability": "stable",
            "summary": "The address of the server for the authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 77
          },
          "name": "serverAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#password Service#password}",
            "stability": "stable",
            "summary": "The password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 71
          },
          "name": "password",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#username Service#username}",
            "stability": "stable",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 83
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 9
      },
      "name": "ServiceConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#name Service#name}",
            "stability": "stable",
            "summary": "Name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 15
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#task_spec Service#task_spec}",
            "stability": "stable",
            "summary": "task_spec block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 57
          },
          "name": "taskSpec",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#auth Service#auth}",
            "stability": "stable",
            "summary": "auth block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 21
          },
          "name": "auth",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceAuth"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#converge_config Service#converge_config}",
            "stability": "stable",
            "summary": "converge_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 27
          },
          "name": "convergeConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceConvergeConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#endpoint_spec Service#endpoint_spec}",
            "stability": "stable",
            "summary": "endpoint_spec block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 33
          },
          "name": "endpointSpec",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceEndpointSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#labels Service#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 39
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#mode Service#mode}",
            "stability": "stable",
            "summary": "mode block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 45
          },
          "name": "mode",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#rollback_config Service#rollback_config}",
            "stability": "stable",
            "summary": "rollback_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 51
          },
          "name": "rollbackConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceRollbackConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#update_config Service#update_config}",
            "stability": "stable",
            "summary": "update_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 63
          },
          "name": "updateConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceUpdateConfig"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceConvergeConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceConvergeConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 95
      },
      "name": "ServiceConvergeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#delay Service#delay}",
            "stability": "stable",
            "summary": "The interval to check if the desired state is reached (ms|s). Defaults to `7s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 101
          },
          "name": "delay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#timeout Service#timeout}",
            "stability": "stable",
            "summary": "The timeout of the service to reach the desired state (s|m). Defaults to `3m`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 107
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceEndpointSpec": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceEndpointSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 162
      },
      "name": "ServiceEndpointSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#mode Service#mode}",
            "stability": "stable",
            "summary": "The mode of resolution to use for internal load balancing between tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 168
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#ports Service#ports}",
            "stability": "stable",
            "summary": "ports block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 174
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceEndpointSpecPorts"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceEndpointSpecPorts": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceEndpointSpecPorts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 118
      },
      "name": "ServiceEndpointSpecPorts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#target_port Service#target_port}",
            "stability": "stable",
            "summary": "The port inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 148
          },
          "name": "targetPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#name Service#name}",
            "stability": "stable",
            "summary": "A random name for the port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 124
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#protocol Service#protocol}",
            "stability": "stable",
            "summary": "Rrepresents the protocol of a port: 'tcp', 'udp' or 'sctp'. Defaults to `tcp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 130
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#published_port Service#published_port}",
            "stability": "stable",
            "summary": "The port on the swarm hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 142
          },
          "name": "publishedPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#publish_mode Service#publish_mode}",
            "stability": "stable",
            "summary": "Represents the mode in which the port is to be published: 'ingress' or 'host'. Defaults to `ingress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 136
          },
          "name": "publishMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 185
      },
      "name": "ServiceLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#label Service#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 191
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#value Service#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 197
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceMode": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceMode",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 224
      },
      "name": "ServiceMode",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#global Service#global}",
            "stability": "stable",
            "summary": "The global service mode. Defaults to `false`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 230
          },
          "name": "global",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#replicated Service#replicated}",
            "stability": "stable",
            "summary": "replicated block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 236
          },
          "name": "replicated",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceModeReplicated"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceModeReplicated": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceModeReplicated",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 208
      },
      "name": "ServiceModeReplicated",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#replicas Service#replicas}",
            "stability": "stable",
            "summary": "The amount of replicas of the service. Defaults to `1`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 214
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceRollbackConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceRollbackConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 247
      },
      "name": "ServiceRollbackConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#delay Service#delay}",
            "stability": "stable",
            "summary": "Delay between task rollbacks (ns|us|ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 253
          },
          "name": "delay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#failure_action Service#failure_action}",
            "stability": "stable",
            "summary": "Action on rollback failure: pause | continue. Defaults to `pause`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 259
          },
          "name": "failureAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#max_failure_ratio Service#max_failure_ratio}",
            "stability": "stable",
            "summary": "Failure rate to tolerate during a rollback. Defaults to `0.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 265
          },
          "name": "maxFailureRatio",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#monitor Service#monitor}",
            "stability": "stable",
            "summary": "Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h). Defaults to `5s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 271
          },
          "name": "monitor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#order Service#order}",
            "stability": "stable",
            "summary": "Rollback order: either 'stop-first' or 'start-first'. Defaults to `stop-first`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 277
          },
          "name": "order",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#parallelism Service#parallelism}",
            "stability": "stable",
            "summary": "Maximum number of tasks to be rollbacked in one iteration. Defaults to `1`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 283
          },
          "name": "parallelism",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpec": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1135
      },
      "name": "ServiceTaskSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#container_spec Service#container_spec}",
            "stability": "stable",
            "summary": "container_spec block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1159
          },
          "name": "containerSpec",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#force_update Service#force_update}",
            "stability": "stable",
            "summary": "A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1141
          },
          "name": "forceUpdate",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#log_driver Service#log_driver}",
            "stability": "stable",
            "summary": "log_driver block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1165
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecLogDriver"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#networks Service#networks}",
            "stability": "stable",
            "summary": "Ids of the networks in which the  container will be put in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1147
          },
          "name": "networks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#placement Service#placement}",
            "stability": "stable",
            "summary": "placement block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1171
          },
          "name": "placement",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecPlacement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#resources Service#resources}",
            "stability": "stable",
            "summary": "resources block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1177
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecResources"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#restart_policy Service#restart_policy}",
            "stability": "stable",
            "summary": "restart_policy block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1183
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecRestartPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#runtime Service#runtime}",
            "stability": "stable",
            "summary": "Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1153
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpec": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 767
      },
      "name": "ServiceTaskSpecContainerSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#image Service#image}",
            "stability": "stable",
            "summary": "The image name to use for the containers of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 809
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#args Service#args}",
            "stability": "stable",
            "summary": "Arguments to the command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 773
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#command Service#command}",
            "stability": "stable",
            "summary": "The command to be run in the image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 779
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#configs Service#configs}",
            "stability": "stable",
            "summary": "configs block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 845
          },
          "name": "configs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecConfigs"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#dir Service#dir}",
            "stability": "stable",
            "summary": "The working directory for commands to run in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 785
          },
          "name": "dir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#dns_config Service#dns_config}",
            "stability": "stable",
            "summary": "dns_config block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 851
          },
          "name": "dnsConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecDnsConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#env Service#env}",
            "stability": "stable",
            "summary": "A list of environment variables in the form VAR=\"value\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 791
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#groups Service#groups}",
            "stability": "stable",
            "summary": "A list of additional groups that the container process will run as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 797
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#healthcheck Service#healthcheck}",
            "stability": "stable",
            "summary": "healthcheck block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 857
          },
          "name": "healthcheck",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHealthcheck"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#hostname Service#hostname}",
            "stability": "stable",
            "summary": "The hostname to use for the container, as a valid RFC 1123 hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 803
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#hosts Service#hosts}",
            "stability": "stable",
            "summary": "hosts block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 863
          },
          "name": "hosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHosts"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#isolation Service#isolation}",
            "stability": "stable",
            "summary": "Isolation technology of the containers running the service. (Windows only). Defaults to `default`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 815
          },
          "name": "isolation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#labels Service#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 869
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#mounts Service#mounts}",
            "stability": "stable",
            "summary": "mounts block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 875
          },
          "name": "mounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMounts"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#privileges Service#privileges}",
            "stability": "stable",
            "summary": "privileges block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 881
          },
          "name": "privileges",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivileges"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#read_only Service#read_only}",
            "stability": "stable",
            "summary": "Mount the container's root filesystem as read only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 821
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#secrets Service#secrets}",
            "stability": "stable",
            "summary": "secrets block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 887
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecSecrets"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#stop_grace_period Service#stop_grace_period}",
            "stability": "stable",
            "summary": "Amount of time to wait for the container to terminate before forcefully removing it (ms|s|m|h)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 827
          },
          "name": "stopGracePeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#stop_signal Service#stop_signal}",
            "stability": "stable",
            "summary": "Signal to stop the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 833
          },
          "name": "stopSignal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#user Service#user}",
            "stability": "stable",
            "summary": "The user inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 839
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecConfigs": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecConfigs",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 298
      },
      "name": "ServiceTaskSpecContainerSpecConfigs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#config_id Service#config_id}",
            "stability": "stable",
            "summary": "ID of the specific config that we're referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 304
          },
          "name": "configId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_name Service#file_name}",
            "stability": "stable",
            "summary": "Represents the final filename in the filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 328
          },
          "name": "fileName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The config in the reference will be identified by its ID\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#config_name Service#config_name}",
            "stability": "stable",
            "summary": "Name of the config that this references, but this is just provided for lookup/display purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 310
          },
          "name": "configName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_gid Service#file_gid}",
            "stability": "stable",
            "summary": "Represents the file GID. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 316
          },
          "name": "fileGid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_mode Service#file_mode}",
            "stability": "stable",
            "summary": "Represents represents the FileMode of the file. Defaults to `0o444`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 322
          },
          "name": "fileMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_uid Service#file_uid}",
            "stability": "stable",
            "summary": "Represents the file UID. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 334
          },
          "name": "fileUid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecDnsConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecDnsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 349
      },
      "name": "ServiceTaskSpecContainerSpecDnsConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#nameservers Service#nameservers}",
            "stability": "stable",
            "summary": "The IP addresses of the name servers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 355
          },
          "name": "nameservers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#options Service#options}",
            "stability": "stable",
            "summary": "A list of internal resolver variables to be modified (e.g., debug, ndots:3, etc.)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 361
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#search Service#search}",
            "stability": "stable",
            "summary": "A search list for host-name lookup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 367
          },
          "name": "search",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHealthcheck": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHealthcheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 379
      },
      "name": "ServiceTaskSpecContainerSpecHealthcheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#test Service#test}",
            "stability": "stable",
            "summary": "The test to perform as list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 403
          },
          "name": "test",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#interval Service#interval}",
            "stability": "stable",
            "summary": "Time between running the check (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 385
          },
          "name": "interval",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#retries Service#retries}",
            "stability": "stable",
            "summary": "Consecutive failures needed to report unhealthy. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 391
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#start_period Service#start_period}",
            "stability": "stable",
            "summary": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 397
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#timeout Service#timeout}",
            "stability": "stable",
            "summary": "Maximum time to allow one check to run (ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 409
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHosts": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecHosts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 423
      },
      "name": "ServiceTaskSpecContainerSpecHosts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#host Service#host}",
            "stability": "stable",
            "summary": "The name of the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 429
          },
          "name": "host",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#ip Service#ip}",
            "stability": "stable",
            "summary": "The ip of the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 435
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 446
      },
      "name": "ServiceTaskSpecContainerSpecLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#label Service#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 452
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#value Service#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 458
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMounts": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMounts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 568
      },
      "name": "ServiceTaskSpecContainerSpecMounts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#target Service#target}",
            "stability": "stable",
            "summary": "Container path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 586
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#type Service#type}",
            "stability": "stable",
            "summary": "The mount type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 592
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#bind_options Service#bind_options}",
            "stability": "stable",
            "summary": "bind_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 598
          },
          "name": "bindOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsBindOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#read_only Service#read_only}",
            "stability": "stable",
            "summary": "Whether the mount should be read-only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 574
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#source Service#source}",
            "stability": "stable",
            "summary": "Mount source (e.g. a volume name, a host path)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 580
          },
          "name": "source",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#tmpfs_options Service#tmpfs_options}",
            "stability": "stable",
            "summary": "tmpfs_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 604
          },
          "name": "tmpfsOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsTmpfsOptions"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#volume_options Service#volume_options}",
            "stability": "stable",
            "summary": "volume_options block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 610
          },
          "name": "volumeOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptions"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsBindOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 469
      },
      "name": "ServiceTaskSpecContainerSpecMountsBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#propagation Service#propagation}",
            "stability": "stable",
            "summary": "A propagation mode with the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 475
          },
          "name": "propagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsTmpfsOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsTmpfsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 485
      },
      "name": "ServiceTaskSpecContainerSpecMountsTmpfsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#mode Service#mode}",
            "stability": "stable",
            "summary": "The permission mode for the tmpfs mount in an integer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 491
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#size_bytes Service#size_bytes}",
            "stability": "stable",
            "summary": "The size for the tmpfs mount in bytes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 497
          },
          "name": "sizeBytes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptions": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 531
      },
      "name": "ServiceTaskSpecContainerSpecMountsVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#driver_name Service#driver_name}",
            "stability": "stable",
            "summary": "Name of the driver to use to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 537
          },
          "name": "driverName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#driver_options Service#driver_options}",
            "stability": "stable",
            "summary": "key/value map of driver specific options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 543
          },
          "name": "driverOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#labels Service#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 555
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptionsLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#no_copy Service#no_copy}",
            "stability": "stable",
            "summary": "Populate volume with data from the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 549
          },
          "name": "noCopy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptionsLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecMountsVolumeOptionsLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 508
      },
      "name": "ServiceTaskSpecContainerSpecMountsVolumeOptionsLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#label Service#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 514
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#value Service#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 520
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivileges": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivileges",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 693
      },
      "name": "ServiceTaskSpecContainerSpecPrivileges",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#credential_spec Service#credential_spec}",
            "stability": "stable",
            "summary": "credential_spec block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 699
          },
          "name": "credentialSpec",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesCredentialSpec"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#se_linux_context Service#se_linux_context}",
            "stability": "stable",
            "summary": "se_linux_context block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 705
          },
          "name": "seLinuxContext",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesCredentialSpec": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesCredentialSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 626
      },
      "name": "ServiceTaskSpecContainerSpecPrivilegesCredentialSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file Service#file}",
            "stability": "stable",
            "summary": "Load credential spec from this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 632
          },
          "name": "file",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#registry Service#registry}",
            "stability": "stable",
            "summary": "Load credential spec from this value in the Windows registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 638
          },
          "name": "registry",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 649
      },
      "name": "ServiceTaskSpecContainerSpecPrivilegesSeLinuxContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#disable Service#disable}",
            "stability": "stable",
            "summary": "Disable SELinux."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 655
          },
          "name": "disable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#level Service#level}",
            "stability": "stable",
            "summary": "SELinux level label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 661
          },
          "name": "level",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#role Service#role}",
            "stability": "stable",
            "summary": "SELinux role label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 667
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#type Service#type}",
            "stability": "stable",
            "summary": "SELinux type label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 673
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#user Service#user}",
            "stability": "stable",
            "summary": "SELinux user label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 679
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecContainerSpecSecrets": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecContainerSpecSecrets",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 716
      },
      "name": "ServiceTaskSpecContainerSpecSecrets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_name Service#file_name}",
            "stability": "stable",
            "summary": "Represents the final filename in the filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 734
          },
          "name": "fileName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#secret_id Service#secret_id}",
            "stability": "stable",
            "summary": "ID of the specific secret that we're referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 746
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_gid Service#file_gid}",
            "stability": "stable",
            "summary": "Represents the file GID. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 722
          },
          "name": "fileGid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_mode Service#file_mode}",
            "stability": "stable",
            "summary": "Represents represents the FileMode of the file. Defaults to `0o444`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 728
          },
          "name": "fileMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#file_uid Service#file_uid}",
            "stability": "stable",
            "summary": "Represents the file UID. Defaults to `0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 740
          },
          "name": "fileUid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The config in the reference will be identified by its ID\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#secret_name Service#secret_name}",
            "stability": "stable",
            "summary": "Name of the secret that this references, but this is just provided for lookup/display purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 752
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecLogDriver": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecLogDriver",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 916
      },
      "name": "ServiceTaskSpecLogDriver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#name Service#name}",
            "stability": "stable",
            "summary": "The logging driver to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 922
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#options Service#options}",
            "stability": "stable",
            "summary": "The options for the logging driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 928
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecPlacement": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecPlacement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 962
      },
      "name": "ServiceTaskSpecPlacement",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#constraints Service#constraints}",
            "stability": "stable",
            "summary": "An array of constraints. e.g.: `node.role==manager`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 968
          },
          "name": "constraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#max_replicas Service#max_replicas}",
            "stability": "stable",
            "summary": "Maximum number of replicas for per node (default value is `0`, which is unlimited)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 974
          },
          "name": "maxReplicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#platforms Service#platforms}",
            "stability": "stable",
            "summary": "platforms block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 986
          },
          "name": "platforms",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecPlacementPlatforms"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "They are provided in order from highest to lowest precedence, e.g.: spread=node.role.manager\n\nDocs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#prefs Service#prefs}",
            "stability": "stable",
            "summary": "Preferences provide a way to make the scheduler aware of factors such as topology."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 980
          },
          "name": "prefs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecPlacementPlatforms": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecPlacementPlatforms",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 939
      },
      "name": "ServiceTaskSpecPlacementPlatforms",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#architecture Service#architecture}",
            "stability": "stable",
            "summary": "The architecture, e.g. `amd64`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 945
          },
          "name": "architecture",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#os Service#os}",
            "stability": "stable",
            "summary": "The operation system, e.g. `linux`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 951
          },
          "name": "os",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecResources": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1075
      },
      "name": "ServiceTaskSpecResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#limits Service#limits}",
            "stability": "stable",
            "summary": "limits block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1081
          },
          "name": "limits",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesLimits"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#reservation Service#reservation}",
            "stability": "stable",
            "summary": "reservation block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1087
          },
          "name": "reservation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesReservation"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecResourcesLimits": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesLimits",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 999
      },
      "name": "ServiceTaskSpecResourcesLimits",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#memory_bytes Service#memory_bytes}",
            "stability": "stable",
            "summary": "The amounf of memory in bytes the container allocates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1005
          },
          "name": "memoryBytes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#nano_cpus Service#nano_cpus}",
            "stability": "stable",
            "summary": "CPU shares in units of `1/1e9` (or `10^-9`) of the CPU. Should be at least 1000000."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1011
          },
          "name": "nanoCpus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecResourcesReservation": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesReservation",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1045
      },
      "name": "ServiceTaskSpecResourcesReservation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#generic_resources Service#generic_resources}",
            "stability": "stable",
            "summary": "generic_resources block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1063
          },
          "name": "genericResources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesReservationGenericResources"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#memory_bytes Service#memory_bytes}",
            "stability": "stable",
            "summary": "The amounf of memory in bytes the container allocates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1051
          },
          "name": "memoryBytes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#nano_cpus Service#nano_cpus}",
            "stability": "stable",
            "summary": "CPU shares in units of 1/1e9 (or 10^-9) of the CPU. Should be at least 1000000."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1057
          },
          "name": "nanoCpus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecResourcesReservationGenericResources": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecResourcesReservationGenericResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1022
      },
      "name": "ServiceTaskSpecResourcesReservationGenericResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#discrete_resources_spec Service#discrete_resources_spec}",
            "stability": "stable",
            "summary": "The Integer resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1028
          },
          "name": "discreteResourcesSpec",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#named_resources_spec Service#named_resources_spec}",
            "stability": "stable",
            "summary": "The String resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1034
          },
          "name": "namedResourcesSpec",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceTaskSpecRestartPolicy": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceTaskSpecRestartPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1098
      },
      "name": "ServiceTaskSpecRestartPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#condition Service#condition}",
            "stability": "stable",
            "summary": "Condition for restart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1104
          },
          "name": "condition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#delay Service#delay}",
            "stability": "stable",
            "summary": "Delay between restart attempts (ms|s|m|h)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1110
          },
          "name": "delay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#max_attempts Service#max_attempts}",
            "stability": "stable",
            "summary": "Maximum attempts to restart a given container before giving up (default value is `0`, which is ignored)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1116
          },
          "name": "maxAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#window Service#window}",
            "stability": "stable",
            "summary": "The time window used to evaluate the restart policy (default value is `0`, which is unbounded) (ms|s|m|h)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1122
          },
          "name": "window",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.ServiceUpdateConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.ServiceUpdateConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 1200
      },
      "name": "ServiceUpdateConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#delay Service#delay}",
            "stability": "stable",
            "summary": "Delay between task updates (ns|us|ms|s|m|h). Defaults to `0s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1206
          },
          "name": "delay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#failure_action Service#failure_action}",
            "stability": "stable",
            "summary": "Action on update failure: pause | continue | rollback. Defaults to `pause`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1212
          },
          "name": "failureAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#max_failure_ratio Service#max_failure_ratio}",
            "stability": "stable",
            "summary": "Failure rate to tolerate during an update. Defaults to `0.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1218
          },
          "name": "maxFailureRatio",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#monitor Service#monitor}",
            "stability": "stable",
            "summary": "Duration after each task update to monitor for failure (ns|us|ms|s|m|h). Defaults to `5s`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1224
          },
          "name": "monitor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#order Service#order}",
            "stability": "stable",
            "summary": "Update order: either 'stop-first' or 'start-first'. Defaults to `stop-first`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1230
          },
          "name": "order",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/service.html#parallelism Service#parallelism}",
            "stability": "stable",
            "summary": "Maximum number of tasks to be updated in one iteration. Defaults to `1`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 1236
          },
          "name": "parallelism",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@cdktf/provider-docker.Volume": {
      "assembly": "@cdktf/provider-docker",
      "base": "cdktf.TerraformResource",
      "docs": {
        "stability": "stable",
        "summary": "Represents a {@link https://www.terraform.io/docs/providers/docker/r/volume.html docker_volume}."
      },
      "fqn": "@cdktf/provider-docker.Volume",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Create a new {@link https://www.terraform.io/docs/providers/docker/r/volume.html docker_volume} Resource."
        },
        "locationInModule": {
          "filename": "src/volume.ts",
          "line": 75
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings in the same scope",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "config",
            "optional": true,
            "type": {
              "fqn": "@cdktf/provider-docker.VolumeConfig"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 104
          },
          "name": "resetDriver"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 120
          },
          "name": "resetDriverOpts"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 162
          },
          "name": "resetLabels"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 146
          },
          "name": "resetName"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 174
          },
          "name": "synthesizeAttributes",
          "overrides": "cdktf.TerraformResource",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "Volume",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 129
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 134
          },
          "name": "mountpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 108
          },
          "name": "driverInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 124
          },
          "name": "driverOptsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 166
          },
          "name": "labelsInput",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.VolumeLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 150
          },
          "name": "nameInput",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 98
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 114
          },
          "name": "driverOpts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 156
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.VolumeLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 140
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.VolumeConfig": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.VolumeConfig",
      "interfaces": [
        "cdktf.TerraformMetaArguments"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 9
      },
      "name": "VolumeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#driver Volume#driver}",
            "stability": "stable",
            "summary": "Driver type for the volume. Defaults to `local`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 15
          },
          "name": "driver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#driver_opts Volume#driver_opts}",
            "stability": "stable",
            "summary": "Options specific to the driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 21
          },
          "name": "driverOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#labels Volume#labels}",
            "stability": "stable",
            "summary": "labels block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 33
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@cdktf/provider-docker.VolumeLabels"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#name Volume#name}",
            "stability": "stable",
            "summary": "The name of the Docker volume (will be generated if not provided)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 27
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@cdktf/provider-docker.VolumeLabels": {
      "assembly": "@cdktf/provider-docker",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@cdktf/provider-docker.VolumeLabels",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 35
      },
      "name": "VolumeLabels",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#label Volume#label}",
            "stability": "stable",
            "summary": "Name of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 41
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/docker/r/volume.html#value Volume#value}",
            "stability": "stable",
            "summary": "Value of the label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 47
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "0.2.31",
  "fingerprint": "vRQ95ctno3OnvNbpO2K8bq9EX/jqcoX9AjmoYefHurY="
}

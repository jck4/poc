"use strict";
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrefixedRemoteWorkspaces = exports.NamedRemoteWorkspace = exports.DataTerraformRemoteState = exports.RemoteBackend = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const terraform_backend_1 = require("../terraform-backend");
const util_1 = require("../util");
const terraform_remote_state_1 = require("../terraform-remote-state");
/**
 * @experimental
 */
class RemoteBackend extends terraform_backend_1.TerraformBackend {
    /**
     * @experimental
     */
    constructor(scope, props) {
        super(scope, "backend", "remote");
        this.props = props;
    }
    /**
     * @experimental
     */
    synthesizeAttributes() {
        return util_1.keysToSnakeCase({ ...this.props });
    }
}
exports.RemoteBackend = RemoteBackend;
_a = JSII_RTTI_SYMBOL_1;
RemoteBackend[_a] = { fqn: "cdktf.RemoteBackend", version: "0.4.1" };
/**
 * @experimental
 */
class DataTerraformRemoteState extends terraform_remote_state_1.TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope, id, config) {
        super(scope, id, "remote", config);
    }
}
exports.DataTerraformRemoteState = DataTerraformRemoteState;
_b = JSII_RTTI_SYMBOL_1;
DataTerraformRemoteState[_b] = { fqn: "cdktf.DataTerraformRemoteState", version: "0.4.1" };
/**
 * @experimental
 */
class NamedRemoteWorkspace {
    /**
     * @experimental
     */
    constructor(name) {
        this.name = name;
    }
}
exports.NamedRemoteWorkspace = NamedRemoteWorkspace;
_c = JSII_RTTI_SYMBOL_1;
NamedRemoteWorkspace[_c] = { fqn: "cdktf.NamedRemoteWorkspace", version: "0.4.1" };
/**
 * @experimental
 */
class PrefixedRemoteWorkspaces {
    /**
     * @experimental
     */
    constructor(prefix) {
        this.prefix = prefix;
    }
}
exports.PrefixedRemoteWorkspaces = PrefixedRemoteWorkspaces;
_d = JSII_RTTI_SYMBOL_1;
PrefixedRemoteWorkspaces[_d] = { fqn: "cdktf.PrefixedRemoteWorkspaces", version: "0.4.1" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWJhY2tlbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZW1vdGUtYmFja2VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLDREQUF3RDtBQUN4RCxrQ0FBMEM7QUFDMUMsc0VBQWlHOzs7O0FBRWpHLE1BQWEsYUFBYyxTQUFRLG9DQUFnQjs7OztJQUMvQyxZQUFZLEtBQWdCLEVBQW1CLEtBQXlCO1FBQ3BFLEtBQUssQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRFMsVUFBSyxHQUFMLEtBQUssQ0FBb0I7SUFFeEUsQ0FBQzs7OztJQUVTLG9CQUFvQjtRQUMxQixPQUFPLHNCQUFlLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O0FBUEwsc0NBUUM7Ozs7OztBQUVELE1BQWEsd0JBQXlCLFNBQVEsNkNBQW9COzs7O0lBQzlELFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsTUFBNEM7UUFDbEYsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7O0FBSEwsNERBSUM7Ozs7OztBQWFELE1BQWEsb0JBQW9COzs7O0lBQzdCLFlBQTBCLElBQVk7UUFBWixTQUFJLEdBQUosSUFBSSxDQUFRO0lBQUcsQ0FBQzs7QUFEOUMsb0RBRUM7Ozs7OztBQUVELE1BQWEsd0JBQXdCOzs7O0lBQ2pDLFlBQTBCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUcsQ0FBQzs7QUFEaEQsNERBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tIFwiY29uc3RydWN0c1wiO1xuaW1wb3J0IHsgVGVycmFmb3JtQmFja2VuZCB9IGZyb20gJy4uL3RlcnJhZm9ybS1iYWNrZW5kJztcbmltcG9ydCB7IGtleXNUb1NuYWtlQ2FzZSB9IGZyb20gXCIuLi91dGlsXCI7XG5pbXBvcnQgeyBUZXJyYWZvcm1SZW1vdGVTdGF0ZSwgRGF0YVRlcnJhZm9ybVJlbW90ZVN0YXRlQ29uZmlnIH0gZnJvbSBcIi4uL3RlcnJhZm9ybS1yZW1vdGUtc3RhdGVcIjtcblxuZXhwb3J0IGNsYXNzIFJlbW90ZUJhY2tlbmQgZXh0ZW5kcyBUZXJyYWZvcm1CYWNrZW5kIHtcbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBwcml2YXRlIHJlYWRvbmx5IHByb3BzOiBSZW1vdGVCYWNrZW5kUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIFwiYmFja2VuZFwiLCBcInJlbW90ZVwiKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3ludGhlc2l6ZUF0dHJpYnV0ZXMoKTogeyBbbmFtZTogc3RyaW5nXTogYW55IH0ge1xuICAgICAgICByZXR1cm4ga2V5c1RvU25ha2VDYXNlKHsgLi4udGhpcy5wcm9wcyB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGUgZXh0ZW5kcyBUZXJyYWZvcm1SZW1vdGVTdGF0ZSB7XG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgY29uZmlnOiBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVSZW1vdGVDb25maWcpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkLCBcInJlbW90ZVwiLCBjb25maWcpO1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZW1vdGVCYWNrZW5kUHJvcHMge1xuICAgIHJlYWRvbmx5IGhvc3RuYW1lPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IG9yZ2FuaXphdGlvbjogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHRva2VuPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHdvcmtzcGFjZXM6IElSZW1vdGVXb3Jrc3BhY2U7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJlbW90ZVdvcmtzcGFjZSB7XG4gICAgXG59XG5cbmV4cG9ydCBjbGFzcyBOYW1lZFJlbW90ZVdvcmtzcGFjZSBpbXBsZW1lbnRzIElSZW1vdGVXb3Jrc3BhY2Uge1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgUHJlZml4ZWRSZW1vdGVXb3Jrc3BhY2VzIGltcGxlbWVudHMgSVJlbW90ZVdvcmtzcGFjZSB7XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyBwcmVmaXg6IHN0cmluZykge31cbn1cblxuZXhwb3J0IGludGVyZmFjZSBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVSZW1vdGVDb25maWcgZXh0ZW5kcyBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVDb25maWcsIFJlbW90ZUJhY2tlbmRQcm9wcyB7fSJdfQ==
"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTerraformRemoteStateArtifactory = exports.ArtifactoryBackend = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const terraform_backend_1 = require("../terraform-backend");
const util_1 = require("../util");
const terraform_remote_state_1 = require("../terraform-remote-state");
/**
 * @experimental
 */
class ArtifactoryBackend extends terraform_backend_1.TerraformBackend {
    /**
     * @experimental
     */
    constructor(scope, props) {
        super(scope, "backend", "artifactory");
        this.props = props;
    }
    /**
     * @experimental
     */
    synthesizeAttributes() {
        return util_1.keysToSnakeCase({ ...this.props });
    }
}
exports.ArtifactoryBackend = ArtifactoryBackend;
_a = JSII_RTTI_SYMBOL_1;
ArtifactoryBackend[_a] = { fqn: "cdktf.ArtifactoryBackend", version: "0.4.1" };
/**
 * @experimental
 */
class DataTerraformRemoteStateArtifactory extends terraform_remote_state_1.TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope, id, config) {
        super(scope, id, "artifactory", config);
    }
}
exports.DataTerraformRemoteStateArtifactory = DataTerraformRemoteStateArtifactory;
_b = JSII_RTTI_SYMBOL_1;
DataTerraformRemoteStateArtifactory[_b] = { fqn: "cdktf.DataTerraformRemoteStateArtifactory", version: "0.4.1" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJ0aWZhY3RvcnktYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFydGlmYWN0b3J5LWJhY2tlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSw0REFBd0Q7QUFDeEQsa0NBQTBDO0FBQzFDLHNFQUFpRzs7OztBQUVqRyxNQUFhLGtCQUFtQixTQUFRLG9DQUFnQjs7OztJQUNwRCxZQUFZLEtBQWdCLEVBQW1CLEtBQThCO1FBQ3pFLEtBQUssQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBREksVUFBSyxHQUFMLEtBQUssQ0FBeUI7SUFFN0UsQ0FBQzs7OztJQUVTLG9CQUFvQjtRQUMxQixPQUFPLHNCQUFlLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O0FBUEwsZ0RBUUM7Ozs7OztBQUVELE1BQWEsbUNBQW9DLFNBQVEsNkNBQW9COzs7O0lBQ3pFLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsTUFBaUQ7UUFDdkYsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLENBQUM7O0FBSEwsa0ZBSUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tIFwiY29uc3RydWN0c1wiO1xuaW1wb3J0IHsgVGVycmFmb3JtQmFja2VuZCB9IGZyb20gJy4uL3RlcnJhZm9ybS1iYWNrZW5kJztcbmltcG9ydCB7IGtleXNUb1NuYWtlQ2FzZSB9IGZyb20gXCIuLi91dGlsXCI7XG5pbXBvcnQgeyBUZXJyYWZvcm1SZW1vdGVTdGF0ZSwgRGF0YVRlcnJhZm9ybVJlbW90ZVN0YXRlQ29uZmlnIH0gZnJvbSBcIi4uL3RlcnJhZm9ybS1yZW1vdGUtc3RhdGVcIjtcblxuZXhwb3J0IGNsYXNzIEFydGlmYWN0b3J5QmFja2VuZCBleHRlbmRzIFRlcnJhZm9ybUJhY2tlbmQge1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIHByaXZhdGUgcmVhZG9ubHkgcHJvcHM6IEFydGlmYWN0b3J5QmFja2VuZFByb3BzKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBcImJhY2tlbmRcIiwgXCJhcnRpZmFjdG9yeVwiKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3ludGhlc2l6ZUF0dHJpYnV0ZXMoKTogeyBbbmFtZTogc3RyaW5nXTogYW55IH0ge1xuICAgICAgICByZXR1cm4ga2V5c1RvU25ha2VDYXNlKHsgLi4udGhpcy5wcm9wcyB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVBcnRpZmFjdG9yeSBleHRlbmRzIFRlcnJhZm9ybVJlbW90ZVN0YXRlIHtcbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBjb25maWc6IERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZUFydGlmYWN0b3J5Q29uZmlnKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCwgXCJhcnRpZmFjdG9yeVwiLCBjb25maWcpO1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBcnRpZmFjdG9yeUJhY2tlbmRQcm9wcyB7XG4gICAgcmVhZG9ubHkgdXNlcm5hbWU6IHN0cmluZztcbiAgICByZWFkb25seSBwYXNzd29yZDogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHVybDogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHJlcG86IHN0cmluZztcbiAgICByZWFkb25seSBzdWJwYXRoOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YVRlcnJhZm9ybVJlbW90ZVN0YXRlQXJ0aWZhY3RvcnlDb25maWcgZXh0ZW5kcyBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVDb25maWcsIEFydGlmYWN0b3J5QmFja2VuZFByb3BzIHt9Il19
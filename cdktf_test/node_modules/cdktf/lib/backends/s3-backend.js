"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTerraformRemoteStateS3 = exports.S3Backend = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const terraform_backend_1 = require("../terraform-backend");
const util_1 = require("../util");
const terraform_remote_state_1 = require("../terraform-remote-state");
/**
 * @experimental
 */
class S3Backend extends terraform_backend_1.TerraformBackend {
    /**
     * @experimental
     */
    constructor(scope, props) {
        super(scope, "backend", "s3");
        this.props = props;
    }
    /**
     * @experimental
     */
    synthesizeAttributes() {
        return util_1.keysToSnakeCase({ ...this.props });
    }
}
exports.S3Backend = S3Backend;
_a = JSII_RTTI_SYMBOL_1;
S3Backend[_a] = { fqn: "cdktf.S3Backend", version: "0.4.1" };
/**
 * @experimental
 */
class DataTerraformRemoteStateS3 extends terraform_remote_state_1.TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope, id, config) {
        super(scope, id, "s3", config);
    }
}
exports.DataTerraformRemoteStateS3 = DataTerraformRemoteStateS3;
_b = JSII_RTTI_SYMBOL_1;
DataTerraformRemoteStateS3[_b] = { fqn: "cdktf.DataTerraformRemoteStateS3", version: "0.4.1" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiczMtYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInMzLWJhY2tlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSw0REFBd0Q7QUFDeEQsa0NBQTBDO0FBQzFDLHNFQUFpRzs7OztBQUVqRyxNQUFhLFNBQVUsU0FBUSxvQ0FBZ0I7Ozs7SUFDM0MsWUFBWSxLQUFnQixFQUFtQixLQUFxQjtRQUNoRSxLQUFLLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQURhLFVBQUssR0FBTCxLQUFLLENBQWdCO0lBRXBFLENBQUM7Ozs7SUFFUyxvQkFBb0I7UUFDMUIsT0FBTyxzQkFBZSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDOztBQVBMLDhCQVFDOzs7Ozs7QUFFRCxNQUFhLDBCQUEyQixTQUFRLDZDQUFvQjs7OztJQUNoRSxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLE1BQXdDO1FBQzlFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDOztBQUhMLGdFQUlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IFRlcnJhZm9ybUJhY2tlbmQgfSBmcm9tICcuLi90ZXJyYWZvcm0tYmFja2VuZCc7XG5pbXBvcnQgeyBrZXlzVG9TbmFrZUNhc2UgfSBmcm9tIFwiLi4vdXRpbFwiO1xuaW1wb3J0IHsgVGVycmFmb3JtUmVtb3RlU3RhdGUsIERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZUNvbmZpZyB9IGZyb20gXCIuLi90ZXJyYWZvcm0tcmVtb3RlLXN0YXRlXCI7XG5cbmV4cG9ydCBjbGFzcyBTM0JhY2tlbmQgZXh0ZW5kcyBUZXJyYWZvcm1CYWNrZW5kIHtcbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBwcml2YXRlIHJlYWRvbmx5IHByb3BzOiBTM0JhY2tlbmRQcm9wcykge1xuICAgICAgICBzdXBlcihzY29wZSwgXCJiYWNrZW5kXCIsIFwiczNcIik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHN5bnRoZXNpemVBdHRyaWJ1dGVzKCk6IHsgW25hbWU6IHN0cmluZ106IGFueSB9IHtcbiAgICAgICAgcmV0dXJuIGtleXNUb1NuYWtlQ2FzZSh7IC4uLnRoaXMucHJvcHMgfSk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgRGF0YVRlcnJhZm9ybVJlbW90ZVN0YXRlUzMgZXh0ZW5kcyBUZXJyYWZvcm1SZW1vdGVTdGF0ZSB7XG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgY29uZmlnOiBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVTM0NvbmZpZykge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQsIFwiczNcIiwgY29uZmlnKTtcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUzNCYWNrZW5kUHJvcHMge1xuICAgIHJlYWRvbmx5IGJ1Y2tldDogc3RyaW5nO1xuICAgIHJlYWRvbmx5IGtleTogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHJlZ2lvbj86IHN0cmluZztcbiAgICByZWFkb25seSBlbmRwb2ludD86IHN0cmluZztcbiAgICByZWFkb25seSBlbmNyeXB0PzogYm9vbGVhbjtcbiAgICByZWFkb25seSBhY2w/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgYWNjZXNzS2V5Pzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHNlY3JldEtleT86IHN0cmluZztcbiAgICByZWFkb25seSBrbXNLZXlJZD86IHN0cmluZztcbiAgICByZWFkb25seSBkeW5hbW9kYlRhYmxlPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHByb2ZpbGU/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgc2hhcmVkQ3JlZGVudGlhbHNGaWxlPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHRva2VuPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHJvbGVBcm4/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgYXNzdW1lUm9sZVBvbGljeT86IHN0cmluZztcbiAgICByZWFkb25seSBleHRlcm5hbElkPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHNlc3Npb25OYW1lPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHdvcmtzcGFjZUtleVByZWZpeD86IHN0cmluZztcbiAgICByZWFkb25seSBkeW5hbW9kYkVuZHBvaW50Pzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IGlhbUVuZHBvaW50Pzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHN0c0VuZHBvaW50Pzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IGZvcmNlUGF0aFN0eWxlPzogYm9vbGVhbjtcbiAgICByZWFkb25seSBza2lwQ3JlZGVudGlhbHNWYWxpZGF0aW9uPzogYm9vbGVhbjtcbiAgICByZWFkb25seSBza2lwTWV0YWRhdGFBcGlDaGVjaz86IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgc3NlQ3VzdG9tZXJLZXk/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgbWF4UmV0cmllcz86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVTM0NvbmZpZyBleHRlbmRzIERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZUNvbmZpZywgUzNCYWNrZW5kUHJvcHMge30iXX0=
import { Construct } from "constructs";
import { TerraformElement } from "./terraform-element";
import { ITerraformDependable } from "./terraform-dependable";
/**
 * @experimental
 */
export interface TerraformOutputConfig {
    /**
     * @experimental
     */
    readonly value: string | number | boolean | any[] | {
        [key: string]: any;
    } | undefined;
    /**
     * @experimental
     */
    readonly description?: string;
    /**
     * @experimental
     */
    readonly sensitive?: boolean;
    /**
     * @experimental
     */
    readonly dependsOn?: ITerraformDependable[];
}
/**
 * @experimental
 */
export declare class TerraformOutput extends TerraformElement {
    /**
     * @experimental
     */
    value: string | number | boolean | any[] | {
        [key: string]: any;
    } | undefined;
    /**
     * @experimental
     */
    description?: string;
    /**
     * @experimental
     */
    sensitive?: boolean;
    /**
     * @experimental
     */
    dependsOn?: ITerraformDependable[];
    /**
     * @experimental
     */
    constructor(scope: Construct, id: string, config: TerraformOutputConfig);
    /**
     * @experimental
     */
    protected synthesizeAttributes(): {
        [key: string]: any;
    };
    /**
     * @experimental
     */
    toTerraform(): any;
}
